<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0616.0146                                -->
  <preferences>
  </preferences>
  <style-theme name='modern' />
  <datasources>
    <datasource caption='Sample - Coffee Chain (Access) (2)' inline='true' name='Sample - Coffee Chain (Access) (copy)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL( SUM([COGS])) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Actual Profit vs Budgeted profit' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation4]-(sum([Budget Profit])/total(sum([Budget Sales])))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Actual margin vs Budgeted margin' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Margin]) / TOTAL(SUM([Sales])))-(SUM([Budget Margin]) / TOTAL(SUM([Budget Sales])))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[Sample - Coffee Chain (Access) (copy)].[Calculation4]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Type:nk]' />
        </table-calc>
        <table-calc field='[Sample - Coffee Chain (Access) (copy)].[Calculation4]' ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Type:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy)].[none:Product Type:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group name='[Most Profitable Products]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Product Line]' member='&quot;Beans&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Coffee&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Colombian&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Espresso&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Regular Espresso&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Product Line]' member='&quot;Leaves&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Herbal Tea&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Chamomile&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Tea&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Darjeeling&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Product]' />
            <hierarchy name='[Product Line]' />
            <hierarchy name='[Product Type]' />
          </order>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Product Line, Product Type'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:Profit:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:COGS:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation2:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation2:qk:4]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation6:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation6:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation3:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation4:qk:6]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation6:qk:2]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation3:qk:4]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:Total Expenses:ok]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[avg:Inventory:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation4:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation5:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy)].[usr:Calculation5:qk:8]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Coffee Chain (Access) (3)' inline='true' name='Sample - Coffee Chain (Access) (copy 2)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column caption='NewinventorySales%' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit %' datatype='real' default-format='p0.00%' name='[Calculation_2900827014653937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Profit]' scope-isolation='false' />
      </column>
      <column caption='Inventory Sales %' datatype='real' default-format='p0.00%' name='[Calculation_8360827015101802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2900827014653937]' derivation='Avg' name='[pcto:avg:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2900827014653937]' derivation='Sum' name='[pcto:sum:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8360827015101802]' derivation='Sum' name='[sum:Calculation_8360827015101802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Product Type, Product Line'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Calculation_2900827014653937]' type='field' />
        <folder-item name='[Calculation_8360827015101802]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[pcto:sum:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[diff:usr:Calculation_7640827014040930:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[pcto:avg:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Calculation_8360827015101802:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 2)].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Amaretto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Earl Grey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Caffe Latte&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Green Tea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Regular Espresso&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chamomile&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Coffee Chain (Access) (4)' inline='true' name='Sample - Coffee Chain (Access) (copy 3)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column caption='NewinventorySales%' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit %' datatype='real' default-format='p0.00%' name='[Calculation_2900827014653937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Profit]' scope-isolation='false' />
      </column>
      <column caption='Inventory Sales %' datatype='real' default-format='p0.00%' name='[Calculation_8360827015101802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2900827014653937]' derivation='Avg' name='[pcto:avg:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2900827014653937]' derivation='Sum' name='[pcto:sum:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8360827015101802]' derivation='Sum' name='[sum:Calculation_8360827015101802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Product Type, Product Line'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Calculation_2900827014653937]' type='field' />
        <folder-item name='[Calculation_8360827015101802]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[pcto:sum:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[diff:usr:Calculation_7640827014040930:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[pcto:avg:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Calculation_8360827015101802:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 3)].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Amaretto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Earl Grey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Caffe Latte&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Green Tea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Regular Espresso&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chamomile&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Coffee Chain (Access) (5)' inline='true' name='Sample - Coffee Chain (Access) (copy 4)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column caption='NewinventorySales%' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='inventory as % of Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='inventory as % of Profits' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit %' datatype='real' default-format='p0.00%' name='[Calculation_2900827014653937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Profit]' scope-isolation='false' />
      </column>
      <column caption='Inventory Sales %' datatype='real' default-format='p0.00%' name='[Calculation_8360827015101802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2900827014653937]' derivation='Avg' name='[pcto:avg:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2900827014653937]' derivation='Sum' name='[pcto:sum:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8360827015101802]' derivation='Sum' name='[sum:Calculation_8360827015101802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Product Type, Product Line'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Calculation_2900827014653937]' type='field' />
        <folder-item name='[Calculation_8360827015101802]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[pcto:sum:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[diff:usr:Calculation_7640827014040930:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[pcto:avg:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Calculation_8360827015101802:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Amaretto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Earl Grey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Caffe Latte&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Green Tea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Regular Espresso&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chamomile&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Coffee Chain (Access) (6)' inline='true' name='Sample - Coffee Chain (Access) (copy 5)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column caption='NewinventorySales%' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit %' datatype='real' default-format='p0.00%' name='[Calculation_2900827014653937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Profit]' scope-isolation='false' />
      </column>
      <column caption='Inventory Sales %' datatype='real' default-format='p0.00%' name='[Calculation_8360827015101802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inventory]/[Sales]' scope-isolation='false' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2900827014653937]' derivation='Avg' name='[pcto:avg:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2900827014653937]' derivation='Sum' name='[pcto:sum:Calculation_2900827014653937:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8360827015101802]' derivation='Sum' name='[sum:Calculation_8360827015101802:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Product Type, Product Line'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Calculation_2900827014653937]' type='field' />
        <folder-item name='[Calculation_8360827015101802]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[pcto:sum:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[diff:usr:Calculation_7640827014040930:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[pcto:avg:Calculation_2900827014653937:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Calculation_8360827015101802:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 5)].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Amaretto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Earl Grey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Caffe Latte&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Green Tea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Regular Espresso&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chamomile&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource inline='true' name='Sample - Coffee Chain (Access)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL( SUM([COGS])) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Actual Profit vs Budgeted profit' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation4]-(sum([Budget Profit])/total(sum([Budget Sales])))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Actual margin vs Budgeted margin' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Margin]) / TOTAL(SUM([Sales])))-(SUM([Budget Margin]) / TOTAL(SUM([Budget Sales])))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Highest Profit States' datatype='integer' name='[Calculation7]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Profit]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Margins as % of sales' datatype='real' default-format='p0.00%' name='[Calculation8]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Margin]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Market]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcva:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Budget COGS]' derivation='Sum' name='[sum:Budget COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:ok]' pivot='key' type='ordinal' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
        <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
        <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
        <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' ordering-type='Field' />
        <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' />
        </table-calc>
        <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation7]' derivation='User' name='[usr:Calculation7:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Area Code]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation8]' derivation='User' name='[usr:Calculation8:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group name='[Most Profitable Products]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Product Line]' member='&quot;Beans&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Coffee&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Colombian&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Espresso&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Regular Espresso&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Product Line]' member='&quot;Leaves&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Herbal Tea&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Chamomile&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Product Type]' member='&quot;Tea&quot;' />
                  <groupfilter function='member' level='[Product]' member='&quot;Darjeeling&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Product]' />
            <hierarchy name='[Product Line]' />
            <hierarchy name='[Product Type]' />
          </order>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Market, State'>
          <field>[Market]</field>
          <field>[State]</field>
          <field>[Area Code]</field>
        </drill-path>
        <drill-path name='Product Line, Product Type'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Market:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Profit:ok]&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:COGS:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:qk:4]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:3]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:7]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:8]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:4]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:qk:6]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:2]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:3]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:qk:4]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Total Expenses:ok]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation7:qk:2]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[diff:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[pcva:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[avg:Inventory:qk]&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:5]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation8:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Budget COGS:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[yr:Date:ok]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:1]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:5]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:2]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:4]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:3]&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Coffee Chain (Access) (7)' inline='true' name='Sample - Coffee Chain (Access) (copy 6)' version='8.3'>
      <connection authentication='no' class='msaccess' driver='' filename='C:\Users\rakesh\Documents\My Tableau Repository\Datasources\Sample - Coffee Chain.mdb' mdwpath='' tablename='factTable'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]'>
              </expression>
              <expression op='[Product].[ProductId]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[factTable].[Area Code]'>
                </expression>
                <expression op='[Location].[Area Code]'>
                </expression>
              </expression>
            </clause>
            <relation name='factTable' table='[factTable]' type='table' />
            <relation name='Location' table='[Location]' type='table' />
          </relation>
          <relation name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code]' value='[factTable].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Location_Area Code]' value='[Location].[Area Code]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Line]' value='[Product].[Product Line]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Product_ProductId]' value='[Product].[ProductId]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Location_Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Product_ProductId]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Sales:qk]&quot;' value='YoY Growth of Sales' />
          <alias key='&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:2]&quot;' value='Marketing Expense/Sales' />
          <alias key='&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:2]&quot;' value='Profit Margin' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget COGS]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Budget Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[COGS]' role='measure' type='quantitative'>
      </column>
      <column caption='marketing expense as % of sales' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Marketing]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='profit as measure of % sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='YoY Increase in Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Sales])) - LOOKUP(ZN(SUM([Sales])), -1)) / ABS(LOOKUP(ZN(SUM([Sales])), -1))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference in Marketing Budget' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Marketing])) - LOOKUP(ZN(SUM([Marketing])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit / Marketing' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Marketing]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Marketing as % of Sales' datatype='real' default-format='p0.00%' name='[Calculation7]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Marketing]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_1170826233512703]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Marketing])/sum([Sales])' scope-isolation='false' />
      </column>
      <column caption='Sales per unit Marketing' datatype='real' default-format='p0.00%' name='[Calculation_5640827001117750]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/Total(Sum([Marketing]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit margin' datatype='real' name='[Calculation_6580826233804593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/Sum([Sales])' scope-isolation='false' />
      </column>
      <column caption='Mrk Sales %' datatype='real' name='[Calculation_8680826234029000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Marketing])/Sum([Sales])' scope-isolation='false' />
      </column>
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*000' hidden='true' name='[Location_Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Market]' role='dimension' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Marketing]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Product]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' hidden='true' name='[Product_ProductId]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Marketing]' derivation='Sum' name='[pcdf:sum:Marketing:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Marketing]' derivation='Sum' name='[pcdf:sum:Marketing:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Expenses]' derivation='Sum' name='[pcva:sum:Total Expenses:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Budget COGS]' derivation='Sum' name='[sum:Budget COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product Type:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[State]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product Type:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk]' pivot='key' type='quantitative'>
        <table-calc level-address='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation7]' derivation='User' name='[usr:Calculation7:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_5640827001117750]' derivation='User' name='[usr:Calculation_5640827001117750:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:Market:nk]' />
          <order field='[Sample - Coffee Chain (Access) (copy 6)].[none:State:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_5640827001117750]' derivation='User' name='[usr:Calculation_5640827001117750:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_6580826233804593]' derivation='User' name='[usr:Calculation_6580826233804593:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8680826234029000]' derivation='User' name='[usr:Calculation_8680826234029000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Product Line, Product Type'>
          <field>[Product Line]</field>
          <field>[Product Type]</field>
          <field>[Product]</field>
        </drill-path>
      </drill-paths>
      <folder name='Actuals' role='measures'>
        <folder-item name='[COGS]' type='field' />
        <folder-item name='[Calculation_1170826233512703]' type='field' />
        <folder-item name='[Calculation_5640827001117750]' type='field' />
        <folder-item name='[Calculation_6580826233804593]' type='field' />
        <folder-item name='[Calculation_8680826234029000]' type='field' />
        <folder-item name='[Inventory]' type='field' />
        <folder-item name='[Margin]' type='field' />
        <folder-item name='[Marketing]' type='field' />
        <folder-item name='[Profit]' type='field' />
        <folder-item name='[Sales]' type='field' />
        <folder-item name='[Total Expenses]' type='field' />
      </folder>
      <folder name='Budget' role='measures'>
        <folder-item name='[Budget COGS]' type='field' />
        <folder-item name='[Budget Margin]' type='field' />
        <folder-item name='[Budget Profit]' type='field' />
        <folder-item name='[Budget Sales]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Marketing:qk:1]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation_5640827001117750:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:5]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Budget COGS:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation4:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation_6580826233804593:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:3]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation5:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation_8680826234029000:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcva:sum:Total Expenses:qk:1]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation_5640827001117750:qk:3]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:2]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:3]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation6:qk:1]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[yr:Date:ok]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:2]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:1]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:3]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:3]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Sales:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:2]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation4:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcto:sum:Profit:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Profit:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:1]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation6:qk:1]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[diff:sum:Marketing:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation5:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[sum:Marketing:qk]&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profitability' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profitability' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Product Performance vs State' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Productwise Loss making states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' filter-group='15'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' included-values='in-range'>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <geometry column='[Sample - Coffee Chain (Access)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Area&amp;Productwise Inventory' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (5)' name='Sample - Coffee Chain (Access) (copy 4)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 4)'>
            <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area Code]' derivation='None' name='[none:Area Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lemon&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' />
              <lod column='[Sample - Coffee Chain (Access) (copy 4)].[none:Area Code:ok]' />
              <lod column='[Sample - Coffee Chain (Access) (copy 4)].[none:State:nk]' />
              <size column='[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access) (copy 4)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access) (copy 4)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Areawise products '>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Area Code]' derivation='None' name='[none:Area Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='None' name='[none:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amaretto&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[none:Profit:qk]' included-values='in-range'>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[none:Profit:qk]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[none:Profit:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Area Code:ok]' />
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Benchmarking Product Type' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='Actual Profit vs Budgeted profit' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation4]-(sum([Budget Profit])/total(sum([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Actual margin vs Budgeted margin' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Margin]) / TOTAL(SUM([Sales])))-(SUM([Budget Margin]) / TOTAL(SUM([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
              <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Type]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Beans&quot;</bucket>
              <bucket>&quot;Leaves&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Coffee&quot;</bucket>
              <bucket>&quot;Espresso&quot;</bucket>
              <bucket>&quot;Tea&quot;</bucket>
              <bucket>&quot;Herbal Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='19'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sample - Coffee Chain (Access)].[:Measure Names]' value='Difference between Actual Profit &amp; Budgeted Profit'>
              <formatted-text>
                <run>Difference between Actual Profit &amp; Budgeted Profit</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / ([Sample - Coffee Chain (Access)].[none:Product Line:nk] / [Sample - Coffee Chain (Access)].[none:Product Type:nk])))</cols>
      </table>
    </worksheet>
    <worksheet name='Benchmarking Productline' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='Actual Profit vs Budgeted profit' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation4]-(sum([Budget Profit])/total(sum([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Actual margin vs Budgeted margin' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Margin]) / TOTAL(SUM([Sales])))-(SUM([Budget Margin]) / TOTAL(SUM([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
              <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product Line]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Beans&quot;</bucket>
              <bucket>&quot;Leaves&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='19'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sample - Coffee Chain (Access)].[:Measure Names]' value='Difference between Actual Profit &amp; Budgeted Profit'>
              <formatted-text>
                <run>Difference between Actual Profit &amp; Budgeted Profit</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / [Sample - Coffee Chain (Access)].[none:Product Line:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Benchmarking Products' tab-color='#d7e9ff'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='Actual Profit vs Budgeted profit' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation4]-(sum([Budget Profit])/total(sum([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Actual margin vs Budgeted margin' datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Margin]) / TOTAL(SUM([Sales])))-(SUM([Budget Margin]) / TOTAL(SUM([Budget Sales])))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
              <table-calc field='[Sample - Coffee Chain (Access)].[Calculation4]' ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product Line:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Beans&quot;</bucket>
              <bucket>&quot;Leaves&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='19'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sample - Coffee Chain (Access)].[:Measure Names]' value='Difference between Actual Profit &amp; Budgeted Profit'>
              <formatted-text>
                <run>Difference between Actual Profit &amp; Budgeted Profit</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / ([Sample - Coffee Chain (Access)].[none:Product Line:nk] / ([Sample - Coffee Chain (Access)].[none:Product Type:nk] / [Sample - Coffee Chain (Access)].[none:Product:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Inventory to Sales &amp; Profit Relation' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (5)' name='Sample - Coffee Chain (Access) (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 4)'>
            <column caption='inventory as % of Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='inventory as % of Profits' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Inventory]) / TOTAL(SUM([Profit]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='manual' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1.0' minor-show='false' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk]' field-type='quantitative' major-show='false' max='69.0' min='-62.0' minor-show='false' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk] + [Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation4:qk])</rows>
        <cols>([Sample - Coffee Chain (Access) (copy 4)].[none:Product Line:nk] / ([Sample - Coffee Chain (Access) (copy 4)].[none:Product Type:nk] / [Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Over all Profitability of Coffee Chain' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='13'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / [Sample - Coffee Chain (Access)].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Product Line Profitability' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='13'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / [Sample - Coffee Chain (Access)].[none:Product Line:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Product Performance vs Area' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Productwise Loss making Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Area Code]' derivation='None' name='[none:Area Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' filter-group='15'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' included-values='in-range'>
            <max>0.0</max>
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Area Code:ok]' />
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Product Type Profitability' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Coffee&quot;</bucket>
              <bucket>&quot;Tea&quot;</bucket>
              <bucket>&quot;Espresso&quot;</bucket>
              <bucket>&quot;Herbal Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='13'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / ([Sample - Coffee Chain (Access)].[none:Product Line:nk] / [Sample - Coffee Chain (Access)].[none:Product Type:nk])))</cols>
      </table>
    </worksheet>
    <worksheet name='Productwise Avg Yearly Inventory' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (5)' name='Sample - Coffee Chain (Access) (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 4)'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lemon&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' />
              <text column='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]</rows>
        <cols>([Sample - Coffee Chain (Access) (copy 4)].[none:Product Line:nk] / ([Sample - Coffee Chain (Access) (copy 4)].[none:Product Type:nk] / [Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Productwise Marketing Budget' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (7)' name='Sample - Coffee Chain (Access) (copy 6)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 6)'>
            <column caption='marketing expense as % of sales' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Marketing]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='profit as measure of % sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Difference in Marketing Budget' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Marketing])) - LOOKUP(ZN(SUM([Marketing])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation3:qk:3]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:3]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation5:qk]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access) (copy 6)].[pcdf:sum:Sales:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amaretto&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' filter-group='10'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]' value='false' />
            <format attr='break-on-special' field='[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]' value='false' />
            <format attr='show-null-value-warning' field='[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]' />
              <color column='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok] / ([Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk] / ([Sample - Coffee Chain (Access) (copy 6)].[none:Product Type:nk] / ([Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk] / [Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Productwise Most Profitable Areas' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Productwise Top performing Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column aggregation='Sum' datatype='integer' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal'>
            </column>
            <column caption='Highest Profit States' datatype='integer' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Profit]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Area Code]' derivation='None' name='[none:Area Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='User' name='[usr:Calculation7:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[Area Code]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' filter-group='15'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[usr:Calculation7:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>9</max>
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[usr:Calculation7:qk:2]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[usr:Calculation7:qk:2]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:Area Code:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Productwise Most Profitable States' tab-color='#fff6be'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Productwise Top Performing 5 states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='Highest Profit States' datatype='integer' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Profit]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='User' name='[usr:Calculation7:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access)].[State]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product Type:nk]'>
            <groupfilter function='level-members' level='[none:Product Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' filter-group='15'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' included-values='all'>
          </filter>
          <filter class='quantitative' column='[Sample - Coffee Chain (Access)].[usr:Calculation7:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[usr:Calculation7:qk]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[usr:Calculation7:qk]' palette='tableau-red-blue' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' num-steps='9' palette='tableau-orange-blue' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <lod column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <geometry column='[Sample - Coffee Chain (Access)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Productwise Profitability' tab-color='#f2e6e6'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='% of COGS to Total Sales' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COGS]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Expenses as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Expenses]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation2:ok]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation3:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='13'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
              <color column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[:Measure Names] / ([Sample - Coffee Chain (Access)].[none:Product Line:nk] / ([Sample - Coffee Chain (Access)].[none:Product Type:nk] / [Sample - Coffee Chain (Access)].[none:Product:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[none:Market Size:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[none:State:nk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Sales:qk]' />
              <text column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
              <geometry column='[Sample - Coffee Chain (Access)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access)].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[Sample - Coffee Chain (Access)].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[Sample - Coffee Chain (Access)].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[Sample - Coffee Chain (Access)].[none:Market Size:nk]</field>
                  <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
                  <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
                  <field>[Sample - Coffee Chain (Access)].[sum:Sales:qk]</field>
                  <field>[Sample - Coffee Chain (Access)].[Geometry (generated)]</field>
                  <field>[Sample - Coffee Chain (Access)].[Latitude (generated)]</field>
                  <field>[Sample - Coffee Chain (Access)].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Small Market&quot;</value>
                <value>&quot;Nevada&quot;</value>
                <value>10616.0</value>
                <value>60159.0</value>
                <value>&quot;MULTIPOLYGON (((-114.0501 36.8439,-114.0431 36.1939,-114.0657 36.18,-114.097 36.121,-114.1213 36.1105,-114.1126 36.0949,-114.1474 36.0271,-114.2447 36.0167,-114.2725 36.0462,-114.3142 36.0601,-114.3073 36.0827,-114.3698 36.1418,-114.4046 36.147,-114.4446 36.1262,-114.462 36.1383,-114.5037 36.1279,-114.5141 36.1505,-114.5732 36.1505,-114.6149 36.1296,-114.6305 36.1418,-114.6809 36.1105,-114.7365 36.1036,-114.7539 36.0862,-114.7348 36.0567,-114.7418 36.0393,-114.7226 36.0288,-114.7418 36.0097,-114.7435 35.9819,-114.7087 35.928,-114.707 35.9089,-114.6618 35.8707,-114.7053 35.8516,-114.6948 35.8307,-114.7122 35.8047,-114.7 35.7908,-114.6948 35.7577,-114.7053 35.7073,-114.6809 35.6847,-114.6896 35.6517,-114.6531 35.61,-114.6583 35.5874,-114.6757 35.5805,-114.6566 35.5335,-114.6792 35.4988,-114.6618 35.4467,-114.6253 35.4084,-114.6045 35.3545,-114.5697 35.1842,-114.5784 35.1286,-114.6271 35.1199,-114.6462 35.1026,-114.6027 35.0678,-114.6357 35.033,-114.634 35.0018,-115.6489 35.8099,-115.8453 35.9645,-117.1661 36.9708,-117.8334 37.4643,-118.4278 37.8971,-119.1577 38.415,-119.328 38.5349,-119.5852 38.7139,-119.905 38.9328,-120.0006 38.9989,-120.0023 39.0667,-120.0041 39.1118,-120.0041 39.1657,-120.0058 39.3169,-120.0041 39.4455,-120.0006 39.7218,-120.0006 41.1834,-119.9988 41.995,-119.361 41.995,-119.3246 41.9933,-118.1967 41.9967,-117.0253 42.0002,-117.0184 42.0002,-115.0389 41.9967,-114.8321 42.0019,-114.2812 41.995,-114.0414 41.9933,-114.0414 40.9992,-114.0466 40.1163,-114.0466 39.9061,-114.0483 39.5428,-114.0501 38.6774,-114.0501 38.5731,-114.0501 38.1491,-114.0518 37.6051,-114.0501 37.0003,-114.0501 36.8439)))&quot;</value>
                <value>39.25</value>
                <value>-116.75</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[Sample - Coffee Chain (Access)].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[Sample - Coffee Chain (Access)].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[Sample - Coffee Chain (Access)].[none:Market Size:nk]</field>
                  <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
                  <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
                  <field>[Sample - Coffee Chain (Access)].[sum:Sales:qk]</field>
                  <field>[Sample - Coffee Chain (Access)].[Geometry (generated)]</field>
                  <field>[Sample - Coffee Chain (Access)].[Latitude (generated)]</field>
                  <field>[Sample - Coffee Chain (Access)].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Major Market&quot;</value>
                <value>&quot;New York&quot;</value>
                <value>20096.0</value>
                <value>70852.0</value>
                <value>&quot;MULTIPOLYGON (((-74.2293 40.5584,-74.2535 40.4944,-74.2501 40.4863,-74.2526 40.4872,-74.2584 40.5074,-74.2463 40.5219,-74.2491 40.5439,-74.2293 40.5584)),((-74.2196 40.5595,-74.2126 40.5665,-74.1709 40.6169,-74.0875 40.6481,-74.0782 40.6296,-74.0788 40.6047,-74.0996 40.5769,-74.1483 40.5439,-74.2325 40.5201,-74.2273 40.5509,-74.2196 40.5595)),((-74.1622 40.6447,-74.1431 40.6464,-74.164 40.6377,-74.2039 40.5995,-74.2004 40.6325,-74.1865 40.6447,-74.1622 40.6447)),((-73.9033 40.5717,-73.9849 40.5821,-74.0232 40.6151,-74.0249 40.6812,-74.0284 40.7072,-74.0128 40.7594,-73.9849 40.7976,-73.9346 40.8827,-73.9172 40.9175,-73.8946 40.9974,-74.2126 41.1347,-74.2352 41.1434,-74.3655 41.2025,-74.6957 41.3572,-74.6905 41.3676,-74.7409 41.4041,-74.7375 41.4302,-74.7548 41.425,-74.7913 41.4215,-74.8087 41.4423,-74.8296 41.4302,-74.8574 41.4441,-74.8921 41.4389,-74.8904 41.4545,-74.913 41.4754,-74.9408 41.4841,-74.9825 41.4806,-74.9842 41.5066,-75.0242 41.5345,-75.019 41.5518,-75.0694 41.6022,-75.0433 41.6231,-75.0537 41.6874,-75.0694 41.7082,-75.0503 41.7135,-75.0537 41.7517,-75.0642 41.7656,-75.1041 41.7743,-75.0989 41.7899,-75.0729 41.8125,-75.1128 41.8229,-75.1163 41.8438,-75.1459 41.8507,-75.1632 41.8507,-75.1737 41.8733,-75.1858 41.8594,-75.2049 41.8699,-75.2241 41.8577,-75.2588 41.8629,-75.271 41.889,-75.2675 41.9046,-75.2797 41.9394,-75.2936 41.955,-75.3144 41.9515,-75.3422 41.9724,-75.3422 41.9933,-75.3596 42.0002,-75.483 41.9985,-76.1052 41.9985,-76.1451 41.9985,-76.557 42.0002,-76.9272 42.0019,-76.9654 42.0019,-77.6102 42.0002,-77.7492 41.9985,-78.2063 42.0002,-78.3088 42.0002,-78.9188 41.9985,-79.0613 41.9985,-79.6105 41.9985,-79.7617 41.9985,-79.7617 42.2696,-79.5618 42.3634,-79.176 42.5615,-79.1534 42.5807,-79.0161 42.6919,-78.9431 42.7405,-78.8979 42.7875,-78.891 42.8396,-78.9118 42.8917,-78.9101 42.9334,-78.9223 42.9491,-78.9675 42.9647,-78.9831 42.9804,-79.0126 43.0308,-79.0074 43.0655,-79.0196 43.0673,-79.0624 43.0838,-79.0491 43.1264,-79.0511 43.2637,-78.9564 43.2815,-78.8058 43.3088,-78.6216 43.3419,-78.4635 43.3558,-78.4235 43.3592,-78.1732 43.361,-77.996 43.3505,-77.9751 43.3505,-77.7909 43.321,-77.6362 43.2776,-77.532 43.2602,-77.3773 43.2706,-77.306 43.2758,-76.9672 43.2828,-76.8055 43.3175,-76.7256 43.3488,-76.6178 43.4044,-76.4701 43.4809,-76.3954 43.507,-76.2876 43.5295,-76.2494 43.5504,-76.2251 43.5904,-76.2147 43.6581,-76.2164 43.679,-76.2216 43.7311,-76.2529 43.8319,-76.2459 43.858,-76.159 43.8928,-76.1434 43.9101,-76.1521 43.9484,-76.2338 43.9831,-76.2929 44.0266,-76.3363 44.0839,-76.3433 44.1117,-76.3328 44.1395,-76.3033 44.1743,-76.2529 44.2073,-76.2199 44.2125,-76.1851 44.2282,-76.1643 44.2577,-76.1156 44.2855,-75.9957 44.3446,-75.9522 44.3481,-75.8601 44.4037,-75.8132 44.4593,-75.6412 44.5966,-75.4865 44.7044,-75.3127 44.8104,-75.0607 44.932,-74.9808 44.9633,-74.8018 44.9963,-74.727 44.9946,-74.7183 44.9981,-74.5428 44.9981,-74.3343 44.9928,-74.0267 44.9963,-73.912 44.9981,-73.4219 44.9981,-73.3437 45.0102,-73.3541 44.9859,-73.3385 44.965,-73.3385 44.9181,-73.3576 44.9007,-73.3802 44.8486,-73.3784 44.8382,-73.335 44.8051,-73.3332 44.7947,-73.3645 44.7426,-73.361 44.6939,-73.3889 44.6192,-73.3819 44.5897,-73.361 44.5636,-73.3385 44.5462,-73.3072 44.501,-73.2933 44.4402,-73.335 44.3637,-73.3141 44.2647,-73.3246 44.2438,-73.3437 44.2386,-73.3628 44.2091,-73.3906 44.1917,-73.4028 44.1448,-73.4149 44.1326,-73.4114 44.1117,-73.4375 44.0474,-73.4062 44.0161,-73.4132 43.9814,-73.408 43.931,-73.375 43.8754,-73.3732 43.8441,-73.3923 43.8232,-73.3784 43.8093,-73.3506 43.7711,-73.3628 43.7537,-73.3715 43.7259,-73.4045 43.6912,-73.4149 43.6529,-73.4271 43.6425,-73.4184 43.6217,-73.4306 43.5886,-73.3958 43.5678,-73.3732 43.6043,-73.3715 43.6251,-73.3072 43.6286,-73.2915 43.6008,-73.295 43.5765,-73.2672 43.5713,-73.2481 43.5539,-73.2481 43.5226,-73.255 43.314,-73.2742 42.9439,-73.2776 42.8552,-73.2881 42.7944,-73.2759 42.7458,-73.2655 42.7458,-73.3524 42.5094,-73.5036 42.0958,-73.4966 42.0489,-73.4879 42.0489,-73.5175 41.6665,-73.5296 41.5275,-73.5453 41.3659,-73.5487 41.2946,-73.4844 41.2112,-73.726 41.1,-73.6548 41.0131,-73.6565 40.9853,-73.766 40.8897,-73.7729 40.8775,-73.8007 40.841,-73.7799 40.8184,-73.7538 40.8254,-73.7173 40.8497,-73.6252 40.8897,-73.4966 40.9245,-73.4427 40.9331,-73.4306 40.9331,-73.3889 40.9384,-73.2342 40.9245,-73.1768 40.9349,-73.1021 40.9644,-72.8258 40.9749,-72.6051 41.0131,-72.3027 41.1417,-72.3201 41.1087,-72.2679 41.0635,-72.2401 41.0496,-72.1602 41.0357,-72.1028 41.0061,-72.0542 41.0148,-71.9568 41.06,-71.969 41.0357,-72.1046 40.9801,-72.4261 40.8688,-72.9805 40.7003,-73.1647 40.6533,-73.2846 40.6308,-73.4236 40.6134,-73.5435 40.5977,-73.7555 40.5804,-73.8807 40.5699,-73.9033 40.5717)))&quot;</value>
                <value>43.0</value>
                <value>-75.489999999999995</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Statewise Sales, Margin &amp; Total Expenses' tab-color='#fff6be'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Margin]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Total Expenses]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:Product:nk]' filter-group='15'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access)].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[Sample - Coffee Chain (Access)].[sum:Margin:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[Sample - Coffee Chain (Access)].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[Sample - Coffee Chain (Access)].[sum:Total Expenses:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Coffee Chain (Access)].[yr:Date:ok] * ([Sample - Coffee Chain (Access)].[sum:Sales:qk] + ([Sample - Coffee Chain (Access)].[sum:Margin:qk] + [Sample - Coffee Chain (Access)].[sum:Total Expenses:qk])))</rows>
        <cols>([Sample - Coffee Chain (Access)].[none:Market:nk] / [Sample - Coffee Chain (Access)].[none:Product Line:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Statewise distribution of Marketing Budgets' tab-color='#eaeed3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (7)' name='Sample - Coffee Chain (Access) (copy 6)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 6)'>
            <column caption='Marketing as % of Sales' datatype='real' default-format='p0.00%' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Marketing]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='User' name='[usr:Calculation7:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Coffee Chain (Access) (copy 6)].[Product]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' filter-group='9'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amaretto&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' filter-group='10'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</column>
            <column>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#cc3e02</color>
                <color>#cb5523</color>
                <color>#cb6c45</color>
                <color>#cb8466</color>
                <color>#ca9b87</color>
                <color>#cab2a8</color>
                <color>#cacaca</color>
                <color>#9cb8a5</color>
                <color>#73a685</color>
                <color>#509567</color>
                <color>#33834e</color>
                <color>#1a7138</color>
                <color>#086026</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Coffee Chain (Access) (copy 6)].[none:State:nk]' />
              <size column='[Sample - Coffee Chain (Access) (copy 6)].[sum:Sales:qk]' />
              <lod column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' />
              <text column='[Sample - Coffee Chain (Access) (copy 6)].[none:Market Size:nk]' />
              <color column='[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access) (copy 6)].[Latitude (generated)]</rows>
        <cols>[Sample - Coffee Chain (Access) (copy 6)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Zonewise Profitability &amp;MArgins'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Coffee Chain (Access)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access)'>
            <column caption='profit as % of Total Sales' datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Margins as % of sales' datatype='real' default-format='p0.00%' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Margin]) / TOTAL(SUM([Sales]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Calculation8]' derivation='User' name='[usr:Calculation8:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation8:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:qk:6]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation8:qk:1]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation4:qk:6]&quot;</bucket>
              <bucket>&quot;[Sample - Coffee Chain (Access)].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[Sample - Coffee Chain (Access)].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[Sample - Coffee Chain (Access)].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access)].[:Measure Names]</column>
            <column>[Sample - Coffee Chain (Access)].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[Sample - Coffee Chain (Access)].[Multiple Values]' value='false' />
            <format attr='break-on-special' field='[Sample - Coffee Chain (Access)].[Multiple Values]' value='false' />
            <format attr='show-null-value-warning' field='[Sample - Coffee Chain (Access)].[Multiple Values]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Coffee Chain (Access)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access)].[Multiple Values]</rows>
        <cols>([Sample - Coffee Chain (Access)].[yr:Date:ok] / ([Sample - Coffee Chain (Access)].[none:Market:nk] / ([Sample - Coffee Chain (Access)].[none:Market Size:nk] / ([Sample - Coffee Chain (Access)].[none:State:nk] / [Sample - Coffee Chain (Access)].[:Measure Names]))))</cols>
      </table>
    </worksheet>
    <worksheet name='state_year_product_wise_breakup' tab-color='#fae7c8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Coffee Chain (Access) (5)' name='Sample - Coffee Chain (Access) (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='Sample - Coffee Chain (Access) (copy 4)'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Avg' datatype='integer' default-format='n#,##0;-#,##0' name='[Inventory]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Product]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lemon&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</column>
            <column>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' num-steps='6' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]' />
              <color column='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Coffee Chain (Access) (copy 4)].[none:State:nk]</rows>
        <cols>[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Coffee Chain Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story of Coffee Chain</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4561' hidden='true' id='3' name='' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='11296' hidden='true' id='4' name='' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561'>
            </zone>
            <zone h='83728' hidden='true' id='5' name='' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857'>
              <flipboard active-id='7' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Productwise Profitability' captured-sheet='Profitability' id='7'>
                  </story-point>
                  <story-point caption='Productwise performance with budgeted values' captured-sheet='Profitability Benchmarking' id='8'>
                    <capturedDeltas>
                      <worksheet name='Benchmarking Products'>
                        <highlight field='[Sample - Coffee Chain (Access)].[:Measure Names]'>
                          <color-one-way>
                            <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
                          </color-one-way>
                          <bucket-selection>
                            <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation5:qk:5]&quot;</bucket>
                          </bucket-selection>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Locationwise Performance of Products' captured-sheet='Location wise least performing Products' id='9'>
                  </story-point>
                  <story-point caption='Underperforming States Financials' captured-sheet='Underperforming locations Sales, Margins &amp; Total Expenses' id='13'>
                  </story-point>
                  <story-point caption='Inventory Management Across Locations &amp; Products' captured-sheet='Inventory Management Across States' id='10'>
                    <capturedDeltas>
                      <worksheet name='Area&amp;Productwise Inventory'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]'>
                          <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Productwise Avg Yearly Inventory'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]'>
                          <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='state_year_product_wise_breakup'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]'>
                          <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Productwise Inventory to Sales &amp; Profit Relationship' captured-sheet='Inventory Sales &amp; Profit Relation' id='11'>
                    <capturedDeltas>
                      <worksheet name='Inventory to Sales &amp; Profit Relation'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[Sample - Coffee Chain (Access) (copy 4)].[usr:Calculation3:qk]</axis>
                              </node-reference>
                              <page-reference>
                              </page-reference>
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Marketing Insights' captured-sheet='Marketing Insights' id='12'>
                    <capturedDeltas>
                      <worksheet name='Productwise Marketing Budget'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]'>
                          <groupfilter function='member' level='[none:Product:nk]' member='&quot;Chamomile&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Statewise distribution of Marketing Budgets'>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]'>
                          <groupfilter function='member' level='[none:Product:nk]' member='&quot;Chamomile&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[Sample - Coffee Chain (Access) (copy 6)].[Latitude (generated)]' field-type='quantitative' max='4445700.1101326039' min='2657813.8805333995' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[Sample - Coffee Chain (Access) (copy 6)].[Longitude (generated)]' field-type='quantitative' max='-6945106.0590296183' min='-10351976.823726721' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Inventory Management Across States'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='29' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='27' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='25' name='Productwise Avg Yearly Inventory' show-title='true' w='11200' x='0' y='0'>
              </zone>
              <zone h='50000' id='33' name='state_year_product_wise_breakup' show-title='true' w='72800' x='11200' y='0'>
              </zone>
              <zone h='50000' id='35' name='Area&amp;Productwise Inventory' show-title='true' w='72800' x='11200' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='28' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='35500' id='30' mode='radiolist' name='Productwise Avg Yearly Inventory' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='filter' values='relevant' w='16000' x='84000' y='0'>
              </zone>
              <zone h='10250' id='31' mode='radiolist' name='Productwise Avg Yearly Inventory' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='35500'>
              </zone>
              <zone h='5250' id='32' name='Productwise Avg Yearly Inventory' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='color' w='16000' x='84000' y='45750'>
              </zone>
              <zone h='7125' id='34' name='state_year_product_wise_breakup' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' type='color' w='16000' x='84000' y='51000'>
              </zone>
              <zone h='5250' id='36' name='Area&amp;Productwise Inventory' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' w='16000' x='84000' y='58125'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Inventory Sales &amp; Profit Relation'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Inventory to Sales &amp; Profit Relation' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='6' mode='radiolist' name='Inventory to Sales &amp; Profit Relation' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='35250' id='7' name='Inventory to Sales &amp; Profit Relation' pane-specification-id='1' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' w='16000' x='84000' y='10750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Location wise least performing Products'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name=' Product Performance vs State' show-title='true' w='42000' x='0' y='0'>
              </zone>
              <zone h='50000' id='10' name='Product Performance vs Area' show-title='true' w='42000' x='0' y='50000'>
              </zone>
              <zone h='50000' id='11' name='Productwise Most Profitable States' show-title='true' w='42000' x='42000' y='0'>
              </zone>
              <zone h='50000' id='12' name='Productwise Most Profitable Areas' show-title='true' w='42000' x='42000' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='6' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='14750' id='7' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' w='16000' x='84000' y='10750'>
              </zone>
              <zone h='35000' id='8' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' w='16000' x='84000' y='25500'>
              </zone>
              <zone h='7125' id='9' name=' Product Performance vs State' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' w='16000' x='84000' y='60500'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Marketing Insights'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='41125' id='1' name='Productwise Marketing Budget' show-title='true' w='84000' x='0' y='0'>
              </zone>
              <zone h='58875' id='9' name='Statewise distribution of Marketing Budgets' show-title='true' w='84000' x='0' y='41125'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='6' mode='radiolist' name='Productwise Marketing Budget' param='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='35000' id='7' mode='radiolist' name='Productwise Marketing Budget' param='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' type='filter' w='16000' x='84000' y='10750'>
              </zone>
              <zone h='12750' id='8' name='Productwise Marketing Budget' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]&#10;[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='color' w='16000' x='84000' y='45750'>
              </zone>
              <zone h='7125' id='10' name='Statewise distribution of Marketing Budgets' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]' type='color' w='16000' x='84000' y='58500'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Profitability'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Productwise Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Productwise Profitability' show-title='true' w='84000' x='0' y='50000'>
              </zone>
              <zone h='50000' id='8' name='Product Line Profitability' show-title='true' w='42000' x='0' y='0'>
              </zone>
              <zone h='50000' id='9' name='Product Type Profitability' show-title='true' w='42000' x='42000' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='6' name='Productwise Profitability' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='17750' id='7' name='Productwise Profitability' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' w='16000' x='84000' y='10750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Profitability Benchmarking'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='14' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='15' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='13' name='Benchmarking Products' show-title='true' w='84000' x='0' y='50000'>
              </zone>
              <zone h='50000' id='20' name='Benchmarking Productline' show-title='true' w='42000' x='0' y='0'>
              </zone>
              <zone h='50000' id='21' name='Benchmarking Product Type' show-title='true' w='42000' x='42000' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='16' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='18' mode='radiolist' name='Benchmarking Products' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='7750' id='19' name='Benchmarking Products' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' w='16000' x='84000' y='10750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Underperforming locations Sales, Margins &amp; Total Expenses'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='10' name=' Product Performance vs State' show-title='true' w='59000' x='25000' y='0'>
              </zone>
              <zone h='100000' id='19' name='Statewise Sales, Margin &amp; Total Expenses' show-title='true' w='25000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='13' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='15' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='14750' id='16' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' w='16000' x='84000' y='10750'>
              </zone>
              <zone h='35000' id='17' mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' w='16000' x='84000' y='25500'>
              </zone>
              <zone h='7125' id='18' name=' Product Performance vs State' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' w='16000' x='84000' y='60500'>
              </zone>
              <zone h='26000' id='20' mode='radiolist' name='Statewise Sales, Margin &amp; Total Expenses' param='[Sample - Coffee Chain (Access)].[none:State:nk]' type='filter' values='relevant' w='16000' x='84000' y='67625'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='1' name='Coffee Chain Story'>
      <active id='4' />
      <zones>
        <zone h='4561' hidden='true' id='3' name='' type='title' w='100000' x='0' y='0' />
        <zone h='11296' hidden='true' id='4' name='' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561' />
        <zone h='83728' hidden='true' id='5' name='' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Profitability'>
      <active id='8' />
      <zones>
        <zone name='Productwise Profitability'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
              <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Product Line Profitability'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Product Type Profitability'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name='Productwise Profitability' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
        <zone name='Productwise Profitability' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Profitability Benchmarking'>
      <active id='13' />
      <zones>
        <zone name='Benchmarking Products'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
              <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
                    <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>2012</bucket>
                    <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;</bucket>
                    <bucket>&quot;Beans&quot;</bucket>
                    <bucket>&quot;Coffee&quot;</bucket>
                    <bucket>&quot;Colombian&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
                    <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>2012</bucket>
                    <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;</bucket>
                    <bucket>&quot;Beans&quot;</bucket>
                    <bucket>&quot;Coffee&quot;</bucket>
                    <bucket>&quot;Amaretto&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
                    <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
                    <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>2012</bucket>
                    <bucket>&quot;[Sample - Coffee Chain (Access)].[usr:Calculation6:qk:6]&quot;</bucket>
                    <bucket>&quot;Beans&quot;</bucket>
                    <bucket>&quot;Espresso&quot;</bucket>
                    <bucket>&quot;Caffe Latte&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone name='Benchmarking Productline'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Benchmarking Product Type'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name='Benchmarking Products' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
        <zone name='Benchmarking Products' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Location wise least performing Products'>
      <active id='1' />
      <zones>
        <zone name=' Product Performance vs State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Product Performance vs Area'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Productwise Most Profitable States'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Productwise Most Profitable Areas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
        <zone name=' Product Performance vs State' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Underperforming locations Sales, Margins &amp; Total Expenses'>
      <active id='20' />
      <zones>
        <zone name=' Product Performance vs State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Statewise Sales, Margin &amp; Total Expenses'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
        <zone mode='radiolist' name=' Product Performance vs State' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
        <zone name=' Product Performance vs State' pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
        <zone mode='radiolist' name='Statewise Sales, Margin &amp; Total Expenses' param='[Sample - Coffee Chain (Access)].[none:State:nk]' type='filter' values='relevant' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Inventory Management Across States'>
      <active id='35' />
      <zones>
        <zone name='Productwise Avg Yearly Inventory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Area&amp;Productwise Inventory'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone mode='radiolist' name='Productwise Avg Yearly Inventory' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='filter' values='relevant' />
        <zone mode='radiolist' name='Productwise Avg Yearly Inventory' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' />
        <zone name='Productwise Avg Yearly Inventory' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='color' />
        <zone name='state_year_product_wise_breakup' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' type='color' />
        <zone name='Area&amp;Productwise Inventory' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Inventory Sales &amp; Profit Relation'>
      <zones>
        <zone name='Inventory to Sales &amp; Profit Relation'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone mode='radiolist' name='Inventory to Sales &amp; Profit Relation' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' />
        <zone name='Inventory to Sales &amp; Profit Relation' pane-specification-id='1' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Marketing Insights'>
      <active id='6' />
      <zones>
        <zone name='Productwise Marketing Budget'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]</field>
              <field>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Statewise distribution of Marketing Budgets'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone mode='radiolist' name='Productwise Marketing Budget' param='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='filter' />
        <zone mode='radiolist' name='Productwise Marketing Budget' param='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' type='filter' />
        <zone name='Productwise Marketing Budget' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]&#10;[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='color' />
        <zone name='Statewise distribution of Marketing Budgets' pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Over all Profitability of Coffee Chain'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[none:Market Size:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Market Size:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Market:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Areawise products '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Zonewise Profitability &amp;MArgins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Market Size:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Market:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Benchmarking Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Benchmarking Productline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Benchmarking Product Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window class='hidden-worksheet' name=' Product Performance vs State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Area&amp;Productwise Inventory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[avg:Inventory:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Inventory to Sales &amp; Profit Relation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Product Line Profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Product Performance vs Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Product Type Profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Productwise Avg Yearly Inventory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Productwise Marketing Budget'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]&#10;[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</field>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk]</field>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product Type:nk]</field>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</field>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]</field>
                </x-fields>
                <y-fields>
                  <field>[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product Line:nk]</field>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product Type:nk]</field>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</field>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</field>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[:Measure Names]</field>
                <field>[Sample - Coffee Chain (Access) (copy 6)].[Multiple Values]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;Beans&quot;</value>
              <value>&quot;Coffee&quot;</value>
              <value>&quot;Amaretto&quot;</value>
              <value>2013</value>
              <value>&quot;[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:3]&quot;</value>
              <value>0.1734435507893953</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Productwise Most Profitable Areas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Productwise Most Profitable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product Type:nk]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:Product:nk]' type='filter' />
            <card param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Area Code:ok]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Type:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[sum:Profit:qk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Productwise Profitability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access)].[:Measure Names]&#10;[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[yr:Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[:Measure Names]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Statewise Sales, Margin &amp; Total Expenses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[Sample - Coffee Chain (Access)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access)].[none:State:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access)].[none:Market:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:Product Line:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Statewise distribution of Marketing Budgets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation7:qk:2]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]' type='filter' />
            <card mode='radiolist' param='[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Market Size:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[none:Product:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[none:State:nk]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[usr:Calculation1:qk:5]</field>
          <field>[Sample - Coffee Chain (Access) (copy 6)].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='state_year_product_wise_breakup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sample - Coffee Chain (Access) (copy 4)].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sample - Coffee Chain (Access) (copy 4)].[none:State:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Coffee Chain Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profitability' width='192'>
      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
      /LH75injnfsnGo6zdusOGiszX+HZ9vPZ6dOvv0DPiIPHKrcs6IORDQqNnrqqAqZcmZ1C6+gk
      cqWcUbOF6toyIl4HbUM+BAIhtRVFpJMRmi4O8Kk9T8wpS1Wxlvrr6k085JljvHj6478DgEgs
      xrUEy+SMGcDedoGv/NNXOd9mf0dCXbEJRSpMQpT9tam0BVw9/zoO53J4Cs7EicMv861vfAt3
      KNsaQM0zf/V7VJiMd9kKX0xNfQMbGurm3KUFoNcb2XvfAR45uG/eEm6lf1xDkwTDLi61ZXz0
      o2EfIoUaheL6JRiz7Ok6g5F9DzxFiW7p7gwCYjQ190IkM+tv3L6De9Y2Uns9QLFjKohWIcY+
      kjlPIVcoqKuqxu2YOwOMOMKc7XJztsuNN5TgXJ+Ply44OHTJicMb49AlF4cuuXjxwsSSeJ4x
      RnKKK6ivqSDP8M7fTUVuAY88cpBUMvtZ4VQ8SDQhRHEbZoCw30nVunsQCbLpf2H++nf/EEFZ
      A3/7pc/eRabMFOu37mVDPJp1j0GtL0KvkzM4NkFNeWHWEm6lf6p3bkajUmKbyMzMwYiEfXu3
      4hixoqoqZrY9fdJm5bX/Ocbn/vYLS35XhWvXUXdT3ScOv8K1QTv1tevZsX0dFWsayS3Io62l
      DYD9jz6Nz+tEKFRNnzG+05jRDz3XrjBgNuPxRRg4f5q/+8Z3IJ3g21/5EmP+mQPd1t3J5Z4B
      1Nrszl419etRqg0U6pZfCSmsuodygwBHVjdcEXsef4xHd2xZ0CL49sPDc99/gUttXVktTLm5
      aqwTdny++ddMAoGQ4pJSxML5l27jHRf547/8Mq8dzwQ0SKfTdF5pwXf9EsPZ9vTlPMMwu+6S
      kmIaNmymuiwj0L6pCQ6//BoCRcbs/MOv/QPf+No36R5dOQ+DGTOA0VjMtj07UIhBrc+jqsSL
      1xdg576dTDmnkEdvKJ7CdAqP28mxY6d45OH75hRsKqqksWYchytMScHyBLhqGW+hZbwFlEAK
      UHRxrRWeqnmKYvWNTly3aTse+2hWVWPlIKNxyzpS3gmiMGefIeD3EggJ0GvnP0129vBL/PjI
      Cf6ocgeVRdk/PJKcAv78T36T/n4HAHX1lbivBigqyFzXOtuevm3HDoQqw7Q9fSmYXbdcm88D
      a3Lp6J/ACDisg/SPuMjJNQG17Lj/SRKiMErx8hudbxUzBCCQiFBXtY6CIh16dQEfr8vsBG/c
      9fD0M2+5QggEaRobG2g+eTFrwS1nj6LQFODxhJZVAL517Vtzft9WsI1idTFfbf4qPVM9NzJe
      /y4A//nIfy5L/UuDivIqE3G/IquqMTgwgEKfS2/fCA1r67KWYCiq4Hd///+Q9zbnszWmXMTa
      ImoTmVnCbLZDOIDD4cKoUzI26sIxMYTcUEEd4HR58U+M4qtZi2KJX4zZdT/n+jk9/Zn+eEb1
      DEp1IR99/wZa20cz7SnIR68SMRG806dCbmCGANTW1fPDH/6Yx36tHL169nGQG7hgcYGsGGJQ
      s2s/FywuNHIxjUU34uAnk0JQpoi4A0D+vGUtJ3qmerg0sfCzvrcbTVNv4oxNZlxJNcD4ZQCe
      LPjo9DP3PXQQpFKiofnvC16/fTs//OGPqa7bOu8zL3UHODl8DYAP+uSsTbuZEmqok2cGmXRW
      ur/zCgXX91QUSzy68JrtFGe7Ms5yTwmfmtEfv1byaxjrK7HFpsjbrMIX8/H5a5+fpv3HXf+x
      tMoXiRkC0NfTy9Mfewaj9u0jEn/0Oxfm/LajUs9zv79zOr3x3j0rLt13C5yxSeyR0ax5tsgI
      h8afm/P7Fu0uMt/oG7iV/hlzh7hgybh87Kg0UK1SsmeDidb2UUrK8okkb6TvIbOnIvGO4veq
      0a/L5ld167AGrNMDflvBtjn5X23+6nT+Dw7+4K74WM0QgPVbdiy5wF9cHuUXl8fm/P7FJxrJ
      X5WFJWEx/SOvaGA0ksBQn4svHJuVjl/fUxESiqYIBeeaI3/Vseym8jF3mAuWuaetfOHEqgCs
      AP7ula7p/vj3p2v479ah6fTPfvdefv27N2bzS59d+gfw3Yb3osv7KlYxjVUBWMV7GqsC8C6F
      e7iTr//oF6RJcOq15+mw3B0n9d5tmFcAbNfO8vl//jYJEpx88cc0dYzfSb5W8Q7wjU8ikslI
      IEJjyMdkUN41x1XfTZhXAMRSKTKpFL/HRafFSVmeYvUF30Uo37qb3WtrCHkmCYYTCNMre43s
      uxXzWoHyGrbztw3bAfiDP/vT6d9XheAugUjKxnWZKAx77rszG42/ilhdA6ziPY1VAVjFexqr
      ArCK9zRWBWAV72msCsAq3tNYFYBVvKexKgCreE/jbQXg5ee+w5XeCeyWVs42990pnlaxijuG
      txUApVLIuM1FYaGRiXH36ibYKn7l8LbnAcqqt5ObV0RSqmD/bi1GQ86qEKziVwpvKwBrGjdM
      /280zH9GeBWreLdidRH8LsV03CaCfPPZv6LJnP3u4lW8PVYF4F0KyXVvXa/Xj1QuQya5uwJB
      vluw+tbepSjfci9/ueVeAH7nr75EPB7H6XSSI4xTo8kEmlKkQuRJbqTT0ZnpeNA7/T+A1+sF
      df2NSgKJG2lJId4oM9IklDfSSSXqZJIKUQUAsogMY8o4nU6FUzPSUV90+n8An9sFsUxUvND1
      6NLEItfTKeKxKMQykbt8ntT0sxm+hZC8KfaUJ3AjHZXiDcZmpAkkp9OrAvArAolEgtFo5JkH
      1vJnH9AikUhwOp0YDxqJx+PT6fftnZl+4/NPzEgbP3tx3jROJ8bds/If/Mx0+hNOJ3+k/aPp
      vGeMz8x49vFtj89IH/r4oRtlA9XlzMjfUFMw/f9m40y+P7CvdiYfBz8/bxqnE+M9e2bmbzhI
      PB6fXwVKRgNcuR5huP3KJaLJlQtft4qF4erplzl2oQ2tNhOorP1yE68eOzWd/78//QGnzl+e
      zv/Xrz7LLw9nbreP+8d55bVX6Ruyo9VqifvHefmVw/QPZyJSD3Rf5Qff+x7eGGi1Wq5ePMlX
      vvQF7KGl1z0y0MWrh17Ad73sO8H3vALQefoily3dgBdzy3lOdy0tDPUq7hzi4SAj1snpL6tE
      IkEquRGQsayomBTp6fwN92xGpcgE2xIIhJj7ekEgQiKRIBBJkIhALM48K1PnYtIqSaffmnUK
      KSitQSNbhrpJ0jcwglCQobsTfM8rACU1xUhTUrzeOGm5mJri7JecreLug6WvnbHxyel0X1cz
      p8+3TqdfO/oaTrt1Ot3VeRWux6yO+8exOqYYHst8OeM+O6cuXGFoJHPv11h/FxcuniN8PVi4
      zzfF1MQgodjS6x4bGcFp7ccfv3N839I1qR/45KemF1ler5eP35MRhpv1txKdArvdTo0mnTVf
      kQri9cah5OHphdPN+XG7HUlCBet+Z04eOfV4vV4qxZV8uPjDc/KlESl2u509uXuoFFfOyXc6
      nYSjSYzy8Nyy40nsdj9KQQKjPJmV1uv1gmbjXFqpLsN3UpM9P5jEG/NiEBUgTSjm5NvtdqKC
      OOWJNXPbFFQQSs0fJ3Q+hJ0WnOIyNlQXTf9WUFxJXigT9a2vr4vPff7vkKgyfdR06jCbdjxI
      XnEmuvaF5ktUr1lPXU0pAEKpirLiQjSazJfWUFzOZ7/wD+Rdj854ra2VHfseRiUG1xLr7uzp
      ZMP2+9GI7xzft7wIfmuRBfDlj1ZnfcbpdPLE9jqe2A6kEvT39JBXUYdWeWMwGR/8zLy0xprN
      ULMZgEnrICFBDmVFxrce4NHqR3l03aPz0j9z7zMAhP0uLDYPDXXVM6a4snnC4DudTrY0FM6i
      rZhBa6z+6Ly0xtrtwPasbcbppNo4//sqNFZTSfV0myM3tXmxu+4SuRK9RjWd9jmdFFU2AjA+
      0s/Q0BgFZdVsqK8m11REdXU9QpEIrydzsYUpL2/6GleJXI0oEUAiz+jd504epbhyHbvvexiV
      FNZv3sGaNWt5ywq72LoBEIjIMxkWTLsUvpe0D3Cp6Qjf/eHPp9M3RyUIO/p5+VQzvT39WWl7
      21v44fe+zVs3KM2OaPCzn/2cgYGurLTRqUG+98Of0dZtzlp3d0cbZw6/yOQ8H9Bf/Og7HDt3
      I6z7QmhXqs23CoWxioZSPWNjN+KzCpM+Rq+rJfsefIqHH36YDfUZodPIJRw6dIgrHRlnx3t3
      7iYc9GK3Z2L8R4MePJEUiXBmkP3W7/8ZDz+cGUQA48MWDh06RDC29Lq3btmK0zpKMHnn+F6S
      AEyM2kgI5ilCIEQuTcE8t5kIE2GG7F5E85AL5SKkWa9AApFEwfhwL9F09kt9JFIZIlEcwTwX
      yTk8XqLzXEf6TrQr1eZbRjqJNteIQnnjKywz1rKppijr4yVVjQz2XMVmz+jKvqQSddJPUXl5
      prgUVK9Zi8mUPXK00WSku7WFQHLpdWu0eiIiFUbFneN7SQIgVufQOM89wSK5hlQ4SVV1RdZ8
      bzjOju2bkM4z0DRSKcaS7FeGRv1OShu2UmBQZ81XSASITY0Y57n3TafTUlZeuijalWrzrSJk
      bSVuXEuu4kbXJhMJrLb5L9ZrrK0mJcwoxx3dvXzgw+9noKMTAJFIQCjgY3LSnZVWr89DrslH
      I1t63YPWCfbWGrEG7xzfSxIAYXSK4+fb5smUosuR4JzKHnJbJBLRcuY4vnmu5SkqMDFqzR6N
      TiAQYDb3MjKa/eWotUYS/glC89y8Njo8jHkw+43s70S7Um2+VShLNiMcv0p+2Q1BUqiUBKfG
      GZuY6y/ktI8wHkggIzMjbmpcw7GTV7l35yYABHINce8k1snJObQAVy5fpCRPjS+y9LrL8w3Y
      BQZKVXeO7yXtBBuLqlmTimbNS/jH6bO7qXQ4oDxvLu0s+/FstLa1U7Mle6Qzha6ImrwccvRz
      ywWwj1sZHx4gkIBsl1RuuGczAkX2SybeiXal2nzrELBj74EZv3gnR0jI8yjJ18/lqbAMfY6C
      svIKAPQFZTxScGOGSwZdBEVqCnTaObQANbVrsDmDaCQQDi+t7pq1m6i5w3wvaQaYHGzDOc+n
      8p0G6Wz78WzcvMkxGxG/kxGHl0Qo+yXd7zTQbrYfL5R2pdq8WLjN54nlb2Zz3dxB9BbGJifx
      OeZeagLQOerh4N57SMfns0gJGOm7klkDLGPdd4rvRQtAaLybbncOBln2+fydBmnb5ZPoTOUk
      5lnzvd0gvXC1ixKThngi+0h6u4HWdukMuvwKkonsg/jtaFeyzYuFTJOPd2yACXf2WcthGyLs
      duOIZDcoJCMBenoGUOtLsuY7bcN0j/pRZtElllL3neJ78SqQSIZep0E7zz3BClMtX/jLv+Di
      xdPA3IWdOseARJQ7LwN/+pdfvk47F0qlErVGh1qV/Q7itZt2UqiK4wyDadYjCoUStVpDTk72
      myvfjnYl27xYKE1VfOLXq4Ds+wqG/BLu3b+fnbu2T9vTb8aOPQ/x1r0x2egbq4yYtv0NKjHM
      HqoLqXul+F6wALy1U3kzg9nQ09bCyLibho03bjSU3OTX8b6P/N68tBNjZq51mSkou7GBdDPt
      zY3LhqZTRwlEYXfF3LzatVuoXbtlQbR3Q5tvFW9Hky3PYR8mEknTPTBMeeHbrz+y0ZudaQLW
      U1Te9/CS6n7Lvn+n+Rak0+lVN89VvGexeiJsFe9pTKtArinvSvKxilWsCFZPhN0OuAf4p+cu
      kadKceCBnSCU45hwsHF9PZ1XT9M/LODRJ/cR9gaxj5lJhScZShRz39piRDIxvQNjFOhkJKQ6
      pAkfUZGaskITP/nv/6C8rIpwTExxWTkqYRSF1si3vvFtnnjiAP0jU2xtKEOmK+bNI8/zwMGn
      ifpsdLe2IRAIkJZv48F7ivHGxOjUq1E+YFUAbiuqa9fQdP4yuUoxmzfV8aW//waf+s0HOfbq
      S1jv38SZb3+djR/7A8TuIcLuYQ692YF7IkZekR5bKoBQV4S5vZncgio+/pEPXS9VjF7kwR0v
      ZmDQAQIz27duwWafQKtQYBkcYuTiVbRaA60XzyEWJUkExpmMqCnTjvHTF9o4+NQHVvS93E2Y
      XgSvqkDLCL+VpqE0u9aX0HTxIoVaGeZhKwq1kVBgnERcQkKcRpYUkJDIqDBJ8ZDL+Kgd4n5K
      CguRSWDcl0AUc5OTV8mOLRtoam5i1/ZdOM2X8Gob6D//BgpjIXLSJNNpQn4bfp+QhFREKuTC
      ULSGHGmCmNtOVG5EV7qGs6+8yGf+9I9W+g3dNVgVgPcQQl4HVk+c2vLsHpbvRUwLQDw+j4fW
      KlbxK4zVfYBVvKexug+wDDh/5hinmloASASdDI3f5A6d8DFq80Lcx4vPH6LHcrPzVhyLZWg6
      ZRuwEAJ6u3vxuN1k8S9jdCRDf/LIq29b1rDFQpw4r/3yl3T0D5EdKUZHM2UcPvRzWjtnnmSz
      9Fum/w86hxn3zeMj/i7GqhVoGWDz+MiRpXjt0P/Q0drGaEhGeWkFn/30J+m91olx3b2QsNI7
      YMc9fI1jmhoSwgR6oZux1iGKH3yQHM8k9hEHT/7JZ+jt7sVuHaN3uIu4a4qBKSn/8PefQx6b
      xOqKUFqWEZKOS1c5V1mHLxKdUZbcY8Vm9fGJz3wGZY6GnPQU3/tFD2nXAB6nE5dQx99/7jME
      hzvwiqooBbr7uiHo4vibR0hEJBgK5CRHuwiqtmKsSKJy2cjb9QkKNL9al3GvCsAyoChXQ1yk
      I0enJv/hEpz+OMqcTPQCVV4JBpkA4hre//T7MEg8+FHTNzxGrjhMQ/V6RvxJqmurMBWWoQA0
      KhFJiZLdex6EsJdyWxipCPyeKGvXZzzm7zv4OBoxJJVKOgdmllVZVU1BsQgJUFFVicGkIc/i
      YWwsxoMHH8PuTyACfCI9jSWZU3WPPPEhagt1VDgi9PVYKCtUE6+pYXDQRW1lMQljAQbNwn2T
      7nasrgFW8Z7GgtcAqxdk3B1Y7YflwXtGBbp0/hRShZJ+m5/71hdj9cLImI1HHrn/vfMS7gLM
      7ofxkJChsQkeP7BnRfh5z1iBKioq6L/UylQkQiQ4gTWmJFcqILXSjL3HMLsfRoJyEpOjBFeo
      I94zAnDtWhsb9++mIEdNXlEteQIXrjDME6FkFbcJs/uhRBFFWVCOfIVG4oIXwU6nc05Es1Xc
      eaz2w/LgXTcD3A2Lv7uBh7sBK/0elqN+0bPPPvvsQghCoRBK5Y3QHebua7gcU/iTMnJn+Jin
      ePPEKcRi0fSFBjGvnfYhD6Nd5+gbj1JZkofFYkan0+Oz9+MXGei5fBbbVICifBOWfgs6g25O
      /T1Xm3HFBJj0udMqTHNzMzJBnHMXr6KUijh3/iJarYqmpiYgzYWm82gKypkYHUGvz5TZe62J
      pmvD1NWUYRuwINLrkISc9DvjTFg66B2ZoKy4kCGLBZVOh+gmHqxDnZy+2EfDmkqcwxYSKh2y
      lA/LqJ++zmasDj8lRfkLebXTiAcmaWq1IEzGpt/diLmbUFpOjlKWtR+cI2Z6JiYIeyLo9DNj
      4Zw7eYKYQIQ+963fYzQ3txNwWhbV/rfQ1dqC1+slrdCjkmVyrzY3ozdqOXXyFBKZgksXmkCq
      puvqBTzhFP3tLQRSUuJTrkx9wMSomWPHT1FSuQZZ0o/ZHkSvVdJvsRDzOTnT3E5ldQXC67wZ
      cuTT78BlH+X4qSYq19SR9NuwB0VolRIsln7GBvroHh6nonSeqMgsQgX64Te/iUinI+SykQom
      GIgK2agOotz2UQqj/VztHqZrYJx/+be/48SLP8fuifDEhz9G06H/YdR8jfUf+CzrRN0MS2tp
      /t//piuQ5oENRXR1XOWDf/z/4e87TSAtp/3oj/Ga7iNte5Oy2u2MhwT85ac/gdPpZKS3lYsd
      Ixx8/HGGrjVj9fpBJMKkUvPwQ/v42YtH+Y0nd/DnX/wZf/5nH6anp5dYOE7dpr0cO/QL1Io4
      BZWbObC1iDcuBhm3vEJHywSbHr2Xqd4uKg58klKhDasrjnvwHFcscvI0bhp3PsFj+7deVz8E
      HD88jMPVSkfzJerve5ipsS4aN3yQMctJ1m7ey+C1M/iRIRXJMbeeImWoorK4HNdAEwJ9DQqt
      hqFLl/mrf/k3Tjz3dcy2MGlNAX/2iUf5xctHSIi1fOzXHuG/v/0vtAxE+Ycv/zU58sxA+8WJ
      q/jGOokEQuTI/Ay2edDtKEIbL2dro4rnmzqJWzr59Je/hvnC63SMTPD4409zrflNvH47ItE6
      PvJk9YLaX1RUQeuwh3/84p8AcPn8aS5dbmfT/gMYQk5eaLWgU8TZV1mEaMNBPE0/RbH1o/S+
      8M/INr6PVGACDRGUxkom25oZkckwKdV88H2P88bh40RiDvzWQYbjBXjcU+zfcw/ra0q42tqP
      Upmm79o1Oh3QuLaBT3/yg9Nq4OHjbxBzjGMd7CBesAn31BR77qnAa7WTV7eRiK2XfkeMhExM
      aLAVudhI0JRPccy6cAtgNB5mw5od6FT3MGbuY1t5Hdqkl7BaA74Ctm7TU1EVQYiQdVt2UWQf
      AqCytorS6nIKi/Uo4hUUSvTUrqvnnrwSUokQBr0RgwLciQS5Bg3rtt9HWluDbF0OMpWR6qQA
      9+QY/riU2toGhJoCAKpqq1CHwKiRopFLePPsJe7fvZ2jp7v43F99grZrHRh0BiaSHtRKGTvu
      3UbM7yCvqgbEYqoq5ChZS23dXoIkqNqtJ7dQQ2hsBK1Wi3rNZnTlMnQaITlaNWOT7usLNgWV
      NYXkan1Ulq8hmBZSU2wgL99AjqSOSDTMPZvu4VhTK42bN1JZmENEZqIq38hEiZq0Kg+RWEh1
      ngGpEEoq12EoSyNW6JCoTezZuw/zgBkQU1W7jvJt5eTIRXhc46AwQCRGWc0airRaPJOD1NcX
      ISuQgi+NTBZj//YtJGrKkIuhtmEDmoJM1OTaqipCVKOR5oFYtaD2S0QKDOURvB4XoKC8phal
      LIcAUFhTSWMAGirzqSgu5M3Tx6nf8AB9rW+y8bFPMm7pRGIy4h+3o8nNoXDnNrSeACplbqYf
      ayqJhnNJVNSRa3WBopaa8iKS8TDKHC06nZytu3OoiUnR5Gqnx4IRqKmsIpyrpKKuFqsriKK2
      ivKiXIKaXFzBKOXrNmF97ST6tZvIry4klZChKMon7Rl/9y2CV7r+VR7uHh6Wo/4VWQSv9OJp
      lYe7o/67gYdlEYBjhw/Rev2igoUjRG/X0NIYCDn5+S9fZmhscbelO4e6cS78NqIZGOpu55XD
      Rwkv8lxRb/fSLsaApfYDdHX1LpGDOK+++ALd5pHFkYecdA0tTSB89n5eOvQaE/55ArDOwrJ4
      AXR39+H3TPLdb36TR588yNW+ftQOM7G8dRhNBTzz0fe9DXWYvu4hBtpOMhzNQTp+AatqK9uK
      Avz/7Z15fFvXdee/2FcCIAECXMBVEjeJonbJsuV9iS27Thw3TeMsTdIsdtIm+STN1mSaSTJt
      ZpLOZNLESePJNKlr14kdy/IqS7JsSZa1UKIWSqS4b+AGggQIEOvD0j/ADcQjSJGyLTn6fT78
      kLzbu++ec+495757z3nh9Qtct7kOZXYJH77v5gxNjNLUOchg628YiCvZUZHN2XOncSmrqM31
      UbZuJzdvqZ63+mh3M2RV8/uffQ/76g289OpbfPD+7Zw5fpaA2kwhQ6zb+QhbqvPmbaO7uZXh
      cRf/+utfoc+2EWw5QL+uikp7Nl3Hj/DID39Gnn7uPsoMWpuaqVyZx9f+9h+48b6dNJy/QJlW
      Tn8kRmF+HqffPMMPf/a/yNDEMumQrD/Wf57DTW4qsoM0dflZvW01p55/hVVbthGQaHnk4w9m
      aCFKa0sro0OdPPoLHzvv2ETX+bNc7J+gqraKXPsqHrzr+vmrB0dp7oaGfb9DZqmg5cBzlNzx
      EVTdxzkxIGFDhR5b5Q3cdf36eZvwDrbTNzRE62P/ikRtwK4coqExQsG6EmT957nho99kfemM
      w93LIgDV1RVYCku4X28lx2blJlMONvUW+n0SDEZxH5wz0EDcg7WsBotKR7hAxnbbKtBquFdh
      o6C4CJlCt0ATZmrKC6go3ky/N4RNG8NgsiA3r0QpjGK0ibvInoK5tJoTDW+x+Zbb0arV3Hnr
      Tdjz86n8aC1tfU5Mcj824zwRMyZRWl2Bv1fPJpsNQSrHZ4yzSl/EikITJUYD6gVGurS4gPrz
      Du6+906y8nK5yXAjJp2cbQoIRCE3y7wgsZZHBzBoQZFVyLbNJWhjPqo3WwhHlZjvB52lmJgk
      g/QBIKeisoKi8jKy7S5yrSbM12exXqImrlBhyDJlrq4xE/ecoLx2O3q9HmP8fRStzENf+xGy
      mrsoztehNuVmfof8lRTnQ+GmAgKRBNJwAdl5Uuw1xfj7beTqUn3evytG8HLauFyG17U+LL+N
      d7sPV5wRfLkMmuW0817pw7v9/D+VPlyyAAQ9w+zfvx+XL+kMu/7EEU6cH04CFgAAIABJREFU
      mAlmfOb4EQ4fP7VgO4NtLYwHvXTOY/R4RgbYtetZRjzp1qmj8yKvHTyaPMkZC/DaCy9ysW9k
      Ov+NV1+isaUjrd5ctDS3MNiWvIcrhu62JnbtehGxm7BtTWd583gDkPzC/fzL+xgc9U3nv/LC
      07R1DyyqD7Pv3s5F/aGXef34+bT0eGSC1/bvwzGcjIF1+sQJjpyon85vbqznjTfeEu37bCxE
      h7BvlF3P7qJveDQtbyFeOHp4H/VnFjbum1uaCbi6GRwX7+1yeGEhOlyyDXDwaAMf+thfsv+5
      5+nzepGODWHIv44tky7eW5pbKFq9gd/+yw9p92VRXmQmNOFluKOR+z79HTZVJz9LD7ZfoKP5
      HBcbHET1Kmw6OQ8//Nnpow2m3AKyDBoOvfgEbpmFYMsBNn38h6wyQENLJ7dft4Vnn3uWkKuT
      8/UuPr7l1uk+tjS3sqO0lK9/4UuUbd1AbtxF81Acp3OCH/7ov2OcVAPPHD+CdziAYJOgiwhM
      mNbzhQ/dNN1O6aoa2nt7+NkP/p6K9Vt47sBJfvO/fwBAR6eDTddt47mn/gNHx1maonnccutM
      H5pbmykrLeELX/8N21ZZmRjpxKdZwVgoyP/41pemjxW88erLJDS5eJ54lHDczIOf/2tWF8zo
      ueU2LT1o+MIjX540bB18928/Q3v9eUpvvoexhpd58kknepMflTqP67dsnn5+jrWSF578NZ2t
      QyRyStBp/Xj6+9ly54e4/bq6RdFBlWUmS2Og4+Q+ft8Txq4cwlC2k3tuW7MgLzS3NlO3pZif
      /Lcvg2UtebkaAoNdnG138tXv/yPlluRRjubz9bQFxmge06HW6VHGx3j4s1+YHoPl8MKCdLjU
      s0DZOhmnTl2gfMVK5CoDG9avIUdjQKZTQDyOUgb+cIKikiK8I6OUr6mltrKagjwLppw8ZLIE
      iXgcrVZP1bp15Gj1WAvzWFtdhUoeJxyVEY9Fps+52HKtmCwWTFlZ2EtWopLGsOiVnG0bYGWR
      lZy8EipWVWG2ZYMQJh6PExdCSNV68my5eLzj1NZuoKZ2A2aTkfw8C9FIspwx20Lt6ipybFby
      cm2sLC8nHAihM+gIzTprY8u1YjGbMJnzqaosJxQIoFZAz5CHvNwsCssrqKhZjy1LSTicbDsS
      nECblYPVWoDP1cfaLdezbsN6DAYjeTkGwuEQ8XgcW76dihWlWG0WCgvLKS0tJBIOTY5R8vkK
      g5VspYTcgjwK8/IpsRegMihpOXMSa0kZCbmSbRvWU5RrIJRQIZck0Krk+P0BbAXFSANOpIW1
      7NhQQ3FeHtkmE8jlSBKLp4PVZkVnNGMyGbEX27HkGBfkBWkiShQFxQU2XKNu1tTVUlWzmjxz
      Nrn5+UhiEeLxONosIxvW1qI1Wci3WamqKEMqhEFtRAgHlsULC9GBxCViZGRkSXmXUm45z3iv
      9OHt7N/leMaV0IfLQYdLVoHGx+d3oZgp71LKLecZ75U+vJ39uxzPuBL6cDnocMkCYDQaM249
      LXZbaqFyy3nGe6UPb2f/LsczroQ+LLf/V92FmGu4hsuJawJwDX/SuCYAVzMSCa65NVsermoB
      EASBM8cP4hjyLVz4PYbx8VGeevy37HnjhGj+n/LYXAquagE4tOdZjpxsRJCmOzdJzJ0aF5gt
      08pfQt13A2P+CQS5jsqVRaL5mcZmsQh6R2k+eYzHfv9ixnJD/X0ceX0v+w6fXPKz3i1c1QKg
      UCi4874PY57lVCboHWX/7mf4+eO7ptMG+zozzJYC9ceO8IPv/igt0vnCdd89qKRylHI5gUBI
      ND/bbOHGW+/Hnp35FCtAV+sFvKH0iwzRQJAjjRdZs7I4Y/2gd4zWrkGK7PmzUmMIQpi9z+9N
      OY4xOuzAIXKsAhZetaIhLxdauxZ6nUvCVS0Abl+Ewc43Od3QN50WGBnkwvAEOzasnk7r7+7M
      MFvGObzvTW6793bRwchc992DXKXnlpu2zUtA50A/j/3yF7i84gIyhYuNDbx+6DBjrom0vKBv
      jLwVa7hu49qMbfjHRzCXVpGtSt1Vf/Lff0ubo2f6WMVgbwcvvbyXYaf4xaVMq1Zg3MWru1+g
      eRHnqy4FlywAgiDQ1XKBCy3zS2JGdeIyYnVtHROjQfJLZ/Z6E5Istq6vwO2ZCVJhtpVSYjPi
      84kde5NSVlbEwIBT9BlajYYsvQ7veDqDLAWXS12IeJ18/+s/wCsVJ2FJzTq2b1hJJJL0ORgY
      d4mqM02n36Jm3U3os5RpbfhcAjaLgpPnmjP3Ja5n4yoLJ8/MLhclR5/H/Q/82bQA9HW0Yrav
      wpojfjdBqdGy8/6HRFet4MggXWENmyvtGftySUgkLl0AuppO8tL+1xmbCIrkZlYnFouoIOAd
      cnDw+JmM5UadDopW1qBRz/itl6sSdPR6yNbNpEVCXqJSFcTEHFBK0Ok0yGTi3wRjCSlatRy5
      Qtw3/qUam+LqwqXDXrKKH//iJ1Tkil8yiQb9KLR6lMrke8WCIVF1Rq3LxT3URP+AN60NrUFG
      V3sfPV19aXmzIZWraDpzDoNp9sWjOG1NFziw/xBTlxMTKCA6QUeneHuuAQ89HY14/OnXGT0j
      E5SVmHFPLO6q40KYUm0vWQASKKlbt5m6qnKR3MzqxGxkYhzBN8zjz+zCMSg+K0/BlGPD7RlO
      MVD9Tge6bAMNp2fuxvb39NPv6Kff4RBpBUa94+g1asTWrZFBFyqVGrVaBUPnoPswhGY+sV+q
      sRkOepFp9Gg0M07EFivws9Hr7OXA4UOcaxS/A6xU6ci15SBEkrp9PBEmIZUSn8M/iViII8fP
      YMnPTmvDUl5GtlpBXn5mB1/2IjNF1XVYsw2zUhWsqi5HrdMxNXVIEgKRGKysXCXajiU/hzH3
      6PSqNRumPAtqqZRgSFyl6+np4cXfP0Zjh7h9MRdTqu0lH4UYHhyi13mOEU+AB3beMidXRmlp
      AcMj7hSns9GQl5beUVZXlE2nHdrzLBd7R7inbGPaM8KBKCtq1rFh7ZqMfXF0XWTAFSCnYGa9
      KVy3nWpjNmNVMwNx6333EY0KeD1iaoycv/zEXxHwjCPx9MCZJ8FUDPa7ALju9tvRaDWMe8bh
      uW9B95tw72/BvgKYNDZXbl+UsQngDym4cccmRnr70ZUnj4ZPCbzJXjlvva7WC5iLKzFM3q3U
      KFS0nz/Fxjs/vKix0efYsJuVBAKpgqrWaKgsX4F7xEvhnOuGQbcHuUqLP5DZY4DH7cc53IfO
      UjorNUFpRS0anWJ6YpGqzRRpIoSCQSB95cq1l7E6W48/ni4A8WiYjrYerNYwuHXg7oSYASaP
      Ogy2n8Ydy2WbRZOxr1Mw20opicTmn6hj4QkaJnW/M/Vv4QsnQ7bl5VsprV7P6jIxd3MJyqpq
      KTRnTb/0fMZLttkyr74X8gzx3HMv88zuVzK+hBAO093vwpwz89L+0X5+9euf8uIrM5dyTh89
      zB9+/0cuinorEHjsZ/+XXz32BAlPL7zxIzj95HTuxbMnefKJp7jQ0i3ah0zGppjeHY8FeXn3
      KwizlptwIErVhq3cc+N1os8QM1SFRJjVm25CGRRXveaOTXdDI/GsfHLzUsf7tvs+xMc++RBF
      uen3rhUaFWOuQWLRzKubSimhr2cQhXq2a0w54+ODSMIJpkZm0/YtbLruBnKNWrFmiIV9BKVS
      gmMTcOrXyZ9J5K5aw2c/9VFuuWFzkvk7X0v+nsSwa4J7/uxuLPO0PXcHKex3I0iV8wvAhUPH
      OdXZDAg0NZ5nfCKIy+VCpjJwx44NOEVn0yhPPfov7Hr1CFObavMZLy6Xh5amesZ86daCOtvG
      Hbdsprgo8/bb+x58iPvvex/5Zv10mlSpo7K0CP2s5VilVJCbayQuTzf0ANatr0Wm0oi6Sl+o
      rkZv4ZEvfyGlD1MQ07vLVpSx+YbtmGddUperZRzZ+wxP/fGg6DPEDFWTrpC6jVtZt6lOtM7c
      sTGXlHPbTTdRbDOnlNv7/B95de/rhOLpCmA8JnCh8STdXZmvFgbGRzj6+rE5N+uCKFQWzh17
      a5oXOs+8yZN/fJHB0XR7A2AikMA31M7IeBDcXcmfqdY8Q/zbv/07F9p6ROtazflcOHVc9NaY
      2CTsHHbSePrk/AJgX1mIMq5k3OOh0JqLLxTDYrFgMGTR3t6GLkvMktfwT7/5NV/97EemdatI
      OIbVpOTkmVSfMzqdjng0TCicHgxUKpWh1uowGhbwBnHmP1l7+htw+gn4nhG+Z0SpUhEHzMaZ
      JTa/sIDuc12UVZeKNCInFo+RZ8tNc/66cF3IL16JIuIRHXipNMLg8CgGw4xx6PEECY4N4ZsV
      mDwRgzVrt1FQZEhrA6CsciO9TUcYHpqZdHpGgrzZ5GbcL+6I6HCTh3HFTER4KSGOHjzMyfOp
      dFCp1fT3OIiL7NzpLEV897s/5OMP3Sn6jClUbtzBj3/xEzavKoGBU9C5H4ITnDt5kK7xIFNU
      FBJyIq5hURUHwD3QxtPPn6S8It3miEUFNFoZjl5xHX/E5SQhkSCXpbO02CR841338IlP/vX8
      NkBOWRWfKKsC4KZ7PzCd7hxw0Nk/RPXazSK1BH7z85/jCyv44t89AoDeYqJt1y7MRam6vlqt
      ZiKaEO2wLicHk2cCQXTXZhY8vUmdvGQmvI4sOMrdawrBZEgaraFxsvNq+cyDtRBxwqFfwlAj
      bPoaWG4BJGyrtLGtZDzFuJ1CtsmQrOttS8sDECJudAWFuAc85JpSl9+AJ0CutZBR1xCsKgFA
      qUjQ1d3LWtuMISiRgFSmwqAX1181GgVrN+/AZk83VOeDazKmrz8cIxCOIZXKGXZ0o7OtSCm3
      eetWgjSJrmDNjglc7TGqCnVUa8VXQADcnWhOPQamsmTEEXcXlHyAT37u07R2OZmqWVG3kd5O
      FxWrSsA3ANEQCDO7a+978CEKzor3RW8pYv3qFUSlxUD6PeOtN96KNd+Eeyz9XrHfm6CyNJsz
      je2UlCTp0NLwJk89tW+uACQYc41hMpuZb1MjIoRRqbXERaVYwZYttRxqHJ62/LUmCxvWVSPX
      lKWUVGnUxH1+4iJMPtrTSTyrCH1EfKnMiDNPwPn/Bzd9E3reTArIX70Iv703mTbUmEyzbIWT
      PwFbLQxPpt38zZl29nwTooNQtRP2fCspZCJjMhFIIBtqZ9RfRMWcvHgsRtA7yphvxl5qu9iC
      0VqAs99BkTXprEul1yMhilolbkgP9A8g0Rgw5xdRPzS1U5TZP84UekeCXHT4MbmbGQqrKPWn
      CnmPT01JzYYF2+kZCRIIx6i2pzOnKHyDyM+foUZfAANuCLmRZJdzx3p1cpUYPJUUlIK7QS2A
      XA2+QdZGT4FvxnEVQTe4vaDOplI7gRjzA7Q3n6bhjEDN+pvImZNnLMiidfdRbNYZHswtLKGg
      2JYqAIPnjvF/ntjF/R/5CtfXie9TF5Wt4uY1lYwOiTFnEEdfiOvrKggBGkCm1HLzLTsZGkkt
      PzwwjFSWwOsLQX7q0i+VymhtPInVMs9e+Rv/JJ5+KQiNJ5k+gXicpKFGmLgIpZmDt02MOejo
      CbN+0+q0PEt5OWvqfBTnW6fTbrn7PpBLiUcTeDxJjw4eRz+Do0GyreK7LTtuvxuP24kiAZ96
      9VMAPFr3wuLecxJ5a7ay4w4tzNnsvejwAyzI2L0jQVxeYfECEA2Ctyv5uImBJLOXkzRep1YK
      JvNOvZJMyylPlhNmbSgMngLvWSi7DbpeS6aV35b2OKVKhXvYhUxEo9Bn51JeaESumeGnrs4B
      7vjAvakCkFVYStXKUqzm+beSHq0fw/nWSb57bw1zHQV6g3LMG7eiVsuZamG4+RS/3H0Im62A
      hz/1l7NKC4x6whRL0rnPVGjnz6o2EwvNswK88aPk79kz9ruEmo3Xc51WgaA0UT+UdEtSJk/O
      NEGfh1FnD+4xgcqq5Poglcup/V0tAK/vfB1IrhTW/GzcTvEdnZd3P8WFhjPc9tDXl9FTCS+c
      TBqzH9iWrmP3jATpHQlSbNFQYl3cViKnHgOZV5Qh32l0tbeQZTIxMOTDbk0VUplKz+2338eA
      c4afNm7fxkCoN1UAJBIphfYi5PN8XgdoGhyn3SvFK+IFtmnQyxefbWdrWQ7//KE6HO4gdrWJ
      qhWllJVXpZSdzThz8VyTjzd6nHxwg50/n98d5xWB4/7j7D67m29s+cb07DzF2HpzIWWFFmSa
      koxt5JSUsKNgFZ7hftF8szGbGz/wINmS9A2Dy4VAOIbLK2ARORJxNeCBj/41ADK5nOeHngJg
      u/x2AIYaj/JUfR+l5ixKimdWgReGfp8qAG++spvHX32dvynbSlmB+I7EYvHMKQc/3d/Gr+8r
      5PZ7d9LakPqV8ysvdAPw1GfT974d7gDHOt1sLTPz4V8fnbfclYCBiQFODp/EF0mfvcc6Gxnw
      a5B7Onmu/Ry723dz/8r7p/P7J/rpinZRoC/gO0e/AsAjhkeoH6qnTF7G3Za7ASgsr0GrFJiI
      XZ3M+U7gzMRxTnneYqNxO4OhyaMWkwuBwpDPzlus9HQOMxDqZSDUR4E6ebgxRQDMBaV85nOf
      x6q/fAOdlVfEF//jNNX5BrbPSj/WmTwR+MypPp455UjO9pvST1xOlbuS0D8xwB/OPEqBviBj
      uZwVddh19YCG+qFWTg6fZHPezO7Z7vbdPN3/NA/XPczJ4eThuPqhen559pf8eeGfT1/o7k/0
      s/tCqvDMxuGmMYxaBWtLF3aA+6cIQ66JuKAEIc5AqI9TnrfAmOTGFAGo3bKF3/3ucVZUbrqs
      HTjWOTbvhRKHO8ixzjG2lpnFC1yBGJgY4Jc9z7PJtimFocUwpRY9XPfwJT9ndt25wjMbLq8A
      iZktz6DIt5XZaHZMcNHhx6IOAovU969Q/Gv3jwHYaNo+bxmF1sTRoafAAAWkTrIpAtB6sYUH
      Hvr0vJ+TZ8MXEjjWOYpBLaemILP78T81PHrm0emZ/Z3E1Jbnchn7cNOVt+ouBQOhPro9LRSo
      i6bVoinVZwqpK8DGrYtuvGnQy0/3t7G1LId/uK8GbyiKN5jZFetP97fy0/1tfHTd4j/oXMM7
      j6mPaJbFne+7YjEQ6qUn2jqt7ojhsgTI+P6LTRzrHFs2Y5d+8yWAawJyDe8YruorkddwDcvF
      NQG4hj9pLOo+QGPDScKxK8wvyDVcw2XAvDbAhUPHOeUfZ8PaAjrqj9KHjS3FGlZZNBgMSqw6
      ObU2Natyk7sNfr8ae7aWDfYopSY5Vp2cDfYs5IkIG+xZrMrVkK1MsMGehU2fzANS0mptahQK
      BfZsLbW24HQ5QRBwuAM43EHUsQCGgqSxLigsKAq2gi4fIXc9CoUSTMX4c9ej0OVDThWC349C
      qoWCrQhKC4qcKogICLp8IgVbEQwrUCgUybSp9sxVCLiIGIygnWzbnPySLfj9ZBns1CXqKFIX
      kavKpS6nDpkgoy4neTY/V5VLTVbNdJ4gCNN/mySmRZWb+g1gkpqm02qyalAoFCikcYxqIBFF
      IxPQKuUoJHE0MmEmDyAaxqgGhTSZp1QoFl1Oq5KhEZLltIoEGpmAPxgmIEggHiWqshBRGUCm
      R1DaUKiT3y0EZQDU2URidgSZMTm+OgEhrkKhs4PagiAIKHR2BJmeiG6ynEwPOjtCJJ4sBwgy
      PX6lDYV8Mk8QZsrJ9FikyaMCsrAcizQPdUKDMZaDQqEkS27EGMtBndBgkeYhCBHU8eTf0kiy
      /LzxAUY7mxO//eMLCY9nJPHsbx9NdI6Glu2vfbHlxPPjibNnz16LD3AZ6i73GZ0t5xPjQeE9
      ER9gXhUop6yKTzxwL0ajhQ984mHKclTzFX0HIHD8yBsceq2ey+MT4BqWikx+hK5GXCVGcJwD
      rx5j5wO3i55cvoZ3Dpn8CF2NuGoEoLa8kJf2HObtOw95DYuBVmtk356XEKIL3Na7SnCVCICM
      LIuOoTEPV/nHyaseZVW15BhVaLTvDUpcJQIQ4eKZIe66eQti/uiu4Z2Do6sVgz4Lh8P9bnfl
      suCyHIV4+6HnI3/7EEFf+JoK9C7j+tt3EgyHkKJBiGZ2mHU14CoRgAn++fv/E0Gu43Nf+/y7
      3Zk/aTz+q5/jj0bYcuenqSi8+g3hq0QA9HzrB9+hvd3Bwge1r+HtxKf/5is0nmulrq4Alyuz
      w6yrAVeJDQAqjY7yFZk9xV3D2w+pXElF1YqFC14luGoEAECjvbpvL71X8F6iw7VI8VdoH670
      KO1XQh/e1UjxgiAgCAJarTZ5QGkygMTURe6pfIVCMZ03lbZQuan8qfRAIJCSv9S6s9MupZ1L
      fc9L7cNy3/PdosOV0Ifl0mFJKtDYYA979+0jLtcSGney69k/0js8R9pCo7zy6n66B2YMpYtn
      j/G7/3iW2d8QFdIIr760h46+9GAYCoWCvo4WWrscaRFaWs83cOjYKbRaLcN9bfznE8+mRKVR
      KBT0tDXy6it7CE06alQoFOz5w+PsfashpS3PQDf7X38ddyDd15FCoaDjYiNdDmfKwAKcrT9C
      /dlmtFotbedP8uxL+9PqNp+tZ8/+Q8gm6yqkEf7/rx7jfFtvSrnzp47xxuETSEUi0SikMRrq
      TzExJ5BdcNzJ3r17mRAkxELj7N71LG29w6l1ZVH279nDhfaZ5y2FDs7+Li5c7EAqT50zF8ML
      3uE+9u3dw7B3pv+v7XoqjQ5x/zAv7z3AgCvdIdpyeWE+OixJAPa/theZTI4EGOvpIqzQo5Cn
      +laWyBQoZCCXz3TWYC5ELReY+xHdOeBAEHHPDRCNBBge7Ke5fcYtdsQ/xqHjp5DLks/saO3E
      mG1MOycklyuQKRTIZmWUlBcR9Ke6ZE/EBRz9Q0hEvNQBTPgm6G0/y8DYzGc4r2uA+rPNyCb7
      0NndhdGQ7jZQIVcgV8zaLpTIKCzIRYimMnMkOIFzzCP6fEjg9/s4fqw+5TvIkddeIyKVI5VI
      CI/1MBZWoFTMXdSlKOTy5FHxSSyFDolYFKdzkMamVO/Si+EFhVyBVCZHrphhNzE6SCAZxWce
      OiyHF+ajw5IEoLjAxuH9e/FGQZuTjeAbJxxOvRAveAc5eKyB7t5Jn+yxMM888Tgj3jkX5xNR
      xn1+2tvFg+61nT/B7ldPUrFyxruaUpdDttLP/oNJV4TZ2QbGRt1pBO3rauX44YOMTx4h9Y0O
      88TTLxCNpfYhMDZKwOukd1Q8stn+V/bRPjROwaxAHAZLAYmxXt46czH5vz4rJTDfFDraWjh0
      6M3pvvV1nOflvYeJxlNJ5BwZxdHXKxqmiUSYPXsOEBLiKS7cy0vsnD56gG5XELk2B4ngIxSe
      8w6JIK8feJPOrkmmWSIdOttbOfjKM9jKUj38LYYXXP3d1NcfweFKqn3z0SEWHmfC76eje1C0
      D8vhhfnosLRdIImUlWvWopeBb3iY5pZ6HK7UCClSpY7iwnwMBu1UAve8/0Huum176kMlMizm
      HEqKxSLOgMm2gltvWJsi0WHfCKrscurWJLfjxjxeDh7Ym8Y8hmwLBfYCFJOVddkWPvyxT7Gu
      ItU1hibHhinHSp5B3CRat2E1K8tSfT+7XaPkraqhsiR5IcPr7mOvSCzhHGsBhXkzUSwLSqv5
      zOc+iSUr9YtGob2APOv8fiCrq6qoWZ3KfMG4hJKyagqyVQi+Yc40t9DjmLs3L6eszE5W1qSn
      vyXSIcuUzcYb7sI4V0NbBC9oskwU5NvRq5LiOx8dpEoD5pxs7AUWxLAcXpiPDksSAJPZiiUn
      B4kETIUlbN90I/Y5IXYUaj2y6AQK9aTPIImERGiMIyfOz2ktjhCToFWL3DdIhEGSoKt7MOWl
      lXozJp0SoyFJVHuRlTvvfCAtwIVaJkGQGdBONi2Vyhhob6SjP9XvTXh8BHW2DYU8fTjGB7pA
      k8PoeGodY44JjVKDISup9ljNNh544N60+tLIGGpL8fRug0wm48ThNwjOOdPhdI1RkG8VPe59
      8UI7BUU2XKOpwSGyTdlkm83IpRKUpkJu3b6JEvsct+lSJUoVqKaW/6XQAQhEZbgdrcy1khbD
      C1qtgmAogV6fPEA3Hx0SUT9xmR5VmhrHsnlhPjoszQh2e1CplEgAIRTCOTaW5pY67PfgCcWJ
      Bmf02t6+AcZGnXOWJzm+8QH6h0ScMcXCdPV5sJp1KXWEgIeAIJ3Wd0PBEB7feBrzBGMQHutk
      tqo5OORkaCg1XpnWZKS1oR6/SHRCr8cDKjWSaOpyPTE2TFyhQTFpFIZCIcbH01WgeCLBYE//
      DOPEw7jGfPT1pUaszFLEOHlePAiHx+NBp9cQCadeBxoeG0OvViGVSIgLIYacY9M2yTRiIQaG
      JhCiM4NwyXQABnrbsVjziMwR3MXwgs8XIRr14fPNrAxidJAqs3D1nBMP7r1MXpiPDks6CtHU
      1EjxiqSLb2RSrLZ8lHIJs3uWiMOKitXk5k66PIz6uNDSTUVlXWrnElGCghKFTOR8udzABx64
      l7hUntLRWMBNa3cftWuS/oOkUhWFdkvashePx1m39Wa0kzwx3NmIM5Bg87rUaIyhYJwsg1I0
      XFNRzXpyinyodakGrs/toXdgkNrcpMqgMuZhiafv4MTlBm7YZp5+52NvHESba6WqIjXMrEQm
      JRqOi9oA2266Da/Xh8GQ6rC45UIzBnspAAlkWK02VEo5KYQgxoqVq8izTa4MS6EDcO/9DxKO
      gm7OKejF8EI8EaeydhO5huQqNB8dYpEAUq0RiSByyG65vDAPHZa0Atx88610dXQQBRqaOtlR
      Z6e3P3X2k8kkBCa8OJ2Tx2ZlGrZvW8/w8JxtNrmB737v2yjiIlIfDfDMH57mxZf3pyy9mtwV
      bF5ppsMxAgQYcAroiKYtz/FYnJGBfkKTo2GyFlFVYsM5mrrbYq9ey9998RN4RLbf3EM9/HHX
      Lg4ePZWSXriqBrtWyuCom8BgI4Kpiqg/ffaMxwQc/TMzXXn1Woxg9OvdAAAGH0lEQVSKGF5/
      6vtuvuX9PHDLOsR867WeO8Zzz71EY2tqgLhbb72ZoZ5OJsJx3mxo4o4ddfT1znGxLpEjhCYY
      mhr3pdABeGnX73nlpReYG9NwUbxAnImxIUYmkhSajw6a3FV85xt/h+AXMYKXzQvidFiSAMQT
      oFFIiSUgL9fA0bM9lK9I1T0lagPCuJN+5+RAxyJ4fBFWlKWe5+luvcDevXsx56d7hkaupXpl
      MaFQ+u6MypRL1OcCNChl4/gU6jRvmKYsNe5QFEdXBwCBCS9SjQG7LTWIzunjh9l7uIlV5enG
      V3ZeCVaDmlA4/TZyTp4Fj8uNJncl410NqI3pRqxWo0MIeemYjFDo9bgx59kxzp5KYyEO7N2L
      MxhB7HxlRU0tCEEiQqp4SBJx1BolISFOcV4uR46epbR87jkdBbJEkJ6+weQW6lLoAFRXVxEO
      BYnOmVoXwwtao4FR1wQjA0kBno8OF8/Vs3fvXgpKReJDL5MX5qPDklSgcDCAUqUkFoc1G7ax
      ZjLElGvWyhXzj+KX6cnLNk6/wIoiI2f74ilLb2nFakor0sMLTcHt9XBg3z4+/OH3p6R7XKMY
      sk2AhBtv3ylad9QzgSLsxVY8GdQ6rxhJ5DQqVarcr9+6I+P7Drefo03m555bU31MukYnMBpz
      kMg17LzvPtG6Pp8bf0hKeWnSlfrK6irOt/YghEJgmDQ4ZWpuvTNTJMYwZxvOorKVsXH1ypnU
      YBiFSkU8HqdqzQYqJgnhmk0IQgy5o2xZY00ahkukw/Com/qDB7j1gx9L7dkieME76kajTWC0
      JNXF+ehQtXYzVWvnH4Xl8MJ8dFjiYTgJPs9w2l7rbFzo83DXjnUkhMltuegEza39DA8PZ6g1
      B5FRJOoSvvrlR9IuwgScbYQVmb1Se4aa2HbDZqZsqpHBQUZGBnCOLd6jQVdLG9sf/Cx/cfuW
      tDxH7zA6fQZvGcEBup1qrt+0Zlq1GXD00NneTfQSrve3dIzxN1/7CqtLU0MbxRMJfF6vaKDB
      KdQ3dHDn+25FMaUULIUOgEEZ5Ytf/RKxNB1tYV5wel1s2XQ9gcnY0kuhw7J4IQMdliQAgt9D
      q0ua0XtwLDTBxYvt6HOmYrMKPP30cwz09y3+VlcixvE3D3L01Lk5Rk0cXwACvswD6I8oaO8e
      YioY/cRQJ/uOnJj5OLcIRPxuXtu/n4tdqbs2iViYSGgUXzDDEMp1JMJOeodc00tt47HXOdfS
      yfDY4g6LATgdnex/7QDD7tT3jSVCnD7fS2mGaD4qIrS0XESum2KQJdABOFN/hINHTjD3Q/Fi
      eME/EaSlrQNrbtIZ2lLosCxeyECHJalA43EFX7x/PT1eKJ9H8CL+cRRaE0bDZAwweTbf/vZX
      aB+cEA1ILQqVlW9+58vpz+88xsq7Po+v862M1QMRyLaZ0E6+Zdn66/nsQx6kRnvGerNRuWEL
      lRvSZ//zx0/wF1/6exqPvjl/ZYmEaDyO0WiYnmnu+uDHCfAKJfmLC3MKsOO2uxBT0rqdIX78
      7Y/TcNHJ9lrxj2ixaBCpXDW9T74kOgCf+NI/iqYvhhd8vhBZRgvGrORquRQ6LIsXMtBhSSuA
      SpKgxZXAluFY+Ia1NXT19eHxzpyficvV9LY3i3/uvwRobFWMthxBokoPsDcblZVV0zsUU1BE
      A7T1XdryL4aSihWcPnQAnSkDI8sNVK2w0DHr7EoiLuAPRHC6RpbdB5NOxqHTfVSUzD8O6zet
      w9HZi2fWN4rLRQdYHC+sqarEMblbNYXLRYdF8UIGOixpBdh+UyaDLQmV3kxddRUK+eQwR90M
      OgUqKlYte+CVuhzuzGg0JmEpLKNiZHQ6PFPn6RPkbrwNd0ND5oqLgMFSwJ13Zo4RBlC0opYR
      T/30/0cO1XPv++/mVGPrsvuwkPEOgEzLpo010x/sLicdYHG8YDTnUVVZhmSSEJeTDovlhfno
      8LbdCBOCo/T09OAYntzrlRuRR4eIK7Xv2EXkgdYz9DnHmJp4CleW0nz8KJb8hRn3cqHpzClG
      xoPTzFZaZuett96ipLT0nelAPExHVx+9fZN76+8CHXzD3fT0DTLqT67FVxId/guXRRa/ayvE
      DwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profitability Benchmarking' width='192'>
      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
      9nCGefWHe2nq+PBm83Mnj3P55EWuP0JqpKOJV/e9SSA+3cEpUyP0ej58qq+7++oFDZ7ebvwZ
      VgifPH6E0xebr/59vVf0Ck3nT/DmW+8Qv6Yv7b0mfZjtGb7dCHuGaekbBaC7u2tG2FzvDUAy
      xqQv8wFep44d5uCRk1f/numlhq5r/p7pDZ+Nd3LmaW9zydRy6RRvvrmf6DVu71llcc373VZD
      oIELh/jnVy+ya2MhqsAIr3cm+eh963G3HOacv4gv/8nP8Q9/8RLFeVHciWKichqbbpTWN4b5
      4tf/jqbXvklTf4y8ijrWG0KcGfEylTCytjhF54VOxtQllORpGL14lLimmLxCDdp0Gs94ms/+
      0f/Dmy/9C+7ufszrNyOnE+hG23lrAL7+T3/Jt//+v9GtXUujI03P5XZSlXWUaVKY84tITo0h
      YGI4MIZNY8I30MuI5KR+XQFybwvBop2k3O38+uc/n9Xvlc0y2Lf3h4yE02gSEwyMhlhTX4U6
      GeS1d5p47uMPURiP83rHAOUFBfib32PIUEelRY1JE+TYWT9b7lnHLz61ka/+6AzaRDfrd/0K
      Xed+RkKlw2Uy0XfxMKP2ataZ1IyPddEzaaCiyoqv/SKW8o1o1QZ+6+e383t/9U0c1XWsNQW5
      eG4I09oa9Ek1yuAZRpyb+F+/96t87W9nl0WVBiRXIaroOKq0ht6JAE6jmomubsbU+dSvK8A4
      1suwth4x0s/nf326LG4rBejr7aXAqub9ywOYpBjuUBK1zog67iaQtvGR3Rtpax6n0Kbgjqpp
      7R6godLMcKuHuod3MdJ2Gb1BTSCuokCT4EznIIUFLgLRGCnvCBOxFO3DUzy4Nh9B40BUi2hl
      if7OAR5+/nm+86//SGPjPRRXl9M9ME6lGVrGYjy6excn3/kpMU0RdlWYaEzCUFzAhQN7sdfu
      orbUSl1dA81tzSSCPlKCio7+SSpLrSRjCqP+OOWFDjZt2pjV75XNMujr7SWdTjM62EkwpsVg
      FBFSCoOjEdZuqsGWTDGWFjGoYLD1IjFjKeJEFz0TYUqKa2moKqZqTRXnzp0DJYi1qB7PQCvB
      pIxRiJNKJ+nzJUiONpM0F2ExOikqsRNxD6K1FOKdivDkvXUcv9CJaHaQnhgkGIhhtGl59d1L
      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
      QKMpeurCD/Aftmc2nAPQHFQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Location wise least performing Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Underperforming locations Sales, Margins &amp; Total Expenses' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Inventory Management Across States' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Inventory Sales &amp; Profit Relation' width='192'>
      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
      /w/n3QBKd3rb/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Marketing Insights' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Over all Profitability of Coffee Chain' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RtI6EyfmxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Areawise products ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zonewise Profitability &amp;MArgins' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Benchmarking Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Benchmarking Productline' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Benchmarking Product Type' width='192'>
      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
      PPPU7+iyeT517j/WepHEO8/9mmd//zzlF3qvc/kTE/aN8tJvfs6P/vMpOobGb2je1NRUag7u
      od0R4PSeg7gu+5vPMcCx8oqPTX/4wEE8wIkP3+SHP/zhrf8muOHMUUwL1rM5TUvr2YO8d6Qc
      a7SK5poBwpKJn/7D93GaMpmvG6WiP8yTT/4jcQbVNVoLcKGhmQXx8Xi7y/jOP7/NupXzOdfu
      ICfVSNP5YTJSApyr6+fOzSs5WdbMmqIU9p5p46F71nOmrIKC1VvZsnzBZ9ZtSZrLHUtyGI5b
      w4lXfs7bJzv46jce5fAfniX7/h/wwNLUT52/8dxRKvr66e/20V67j7JOHxmxZhISJM627OX8
      oqUky3vZX+0gI9XE6g3ruWvbVkZc+4n1NPOdJ/6Jpdu+SFRvGXXuGP7uW1+8YhnB3nM0Bufy
      ze35jA4289PffIAhVkfTqTZQqPE6fkJtf5g78mI5VNbAt//hJyxKvdYWR6K1sYGo7CUo/Db+
      4W9+TOHiIk43DpGSGEu4r4PErGSOnznP5s0bOLD3COvu2sjRg8e4b/vdnD1+hrh5i3j8gc2f
      2bdyjZV77yzltXYLrvo9/MX/3sNdj/4FfWd24stYz3cfWvep8w+21rKrrgdHfSc94818sO8s
      i4tLsEsK+horOVe2khW5Jna8fpz0/FxKNsDKTZ+nsWP01m8BrDHRDHS0UHv2JLUdQ+TMn0dA
      radk2WLmJ1nxquMpmJPIgDPM0uI85LJPv4WJNSmLTRs3YtZbKMiOo7N7gJScIjyOfuLTcgj5
      fKxeXowlPpVEvQyPPIYMa4CaC71kz89lcHj4BtdAondgjGXLShhuOw8GC0Mjjs+cS2uM56FH
      HiU70cKAw8+yknxCLiWLinNJzlmAf6idqpZBFEEP4U+ssn2on/T8xcQafDS3Owm4R6+6DIUp
      geBQCy3156lvvIA5o5BA2EdRcTFFBXmMfdSnff2jLF+5FOVn3B1Da4pl/cZNpMRaKSiYT3dn
      J8a4LBRhJ0pTCmalj+KlyzCbzOTPS6J/KExeZiwdrY0YMxbiGOm53k69ZKi7j8IVq5GNtjLo
      V+J0jF3HXBq2PvgoS+dn0Nk7zB13rEDmhaLihZiSstCFxzlX2YBBLeH5xNZbJknSlN0kp6ur
      i7S0tI+/KIVoqq7AqYymKDuBsvJq5hXk4XP5CAXk+J3d+HRJxCjG6bTLKC7IRn7N/6gAlSdO
      MeTykrNgIf1tzegDQ7xZ6+ObX/wcfncAq85PdYedknmJnKttoyAvi8qaVpaWFlBdWU1e0WJM
      OtW1672M0z6IX2VF7R2ipm2I/Owk6lu7SUueQ1Lipx/+7evoIDo1jeG+ATQyN20jIZKMGswx
      Wmrq20mfm8dYVxOSMRajVk1qagqysJ++fhuJcWbOlVWSWVBEV915ohJSyEiMw+FwEB8f/7Hl
      9LbV0T4cpLR4AfUVZ4jPzifkdAMy1DjptEvkphqpauxj2bLiTwmBREt1Oa39oyRm5CIb78Gg
      kfjlG1V867H7UEshkuL0lJ2/wMKifGrKy8hZWMyFmmpyCovpbaokdu4ikqxR19W3IY+dAY+S
      OF2Is+W1LCxZSH1NHXFJmWSmxV9zPgBbTxequBTcA31EmVRU1XeRl5EEUXp6mmvRxM5F7xvE
      5pejN1jIzExBSZienj7+P1FdQKK6Gw2LAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
